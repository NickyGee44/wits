{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x5AAbEabcB964533e3bDa32c7944Ef56f764Fa659",
    "txHash": "0x757844432a343ce835a0bc5c8b5222a8e2aac60e1ba560bf8d72280490fd23ff"
  },
  "proxies": [
    {
      "address": "0x2B0243F5a0f8c690BCdAE0e00C669e45E44d6A0d",
      "txHash": "0xb1562af0e0a497da8eb3bd9b6c6b0a5389f0297234e76ea49b2a5e61aedb77cd",
      "kind": "transparent"
    },
    {
      "address": "0x1e89A706Ee63dc488435c4f6175AfA7168B58d61",
      "txHash": "0x68fa6b20419bec200b2a57b835d71d5d21c5ecca93762aeafcbf1c4eb755b256",
      "kind": "transparent"
    },
    {
      "address": "0x1c3cF14fB52AE4feD9d6D73694F278F946FfC85d",
      "txHash": "0xdccb7ee14b9e144a7b6b730e12b06621c4e25a2425933f2a2b77b292876322c5",
      "kind": "transparent"
    },
    {
      "address": "0xab37CB54be3b983Dcd9D530B59b70040C2280E83",
      "txHash": "0x7ce5954e1fc1f004a17797e9585243605a623866583b314640ab0400e78e584d",
      "kind": "transparent"
    },
    {
      "address": "0xE19A80c2AbB178dc36329781431BD677372e4185",
      "txHash": "0xb646dcc49de77d8eb96d78f63099c45983aae7bf1666173fe6e7595178018e0b",
      "kind": "transparent"
    },
    {
      "address": "0x79436b6E87b7360B72A2BcAFEA2367581697ba08",
      "txHash": "0x0bd538710054ab27ccab1b78b0191da9e33a9e3b6b4b4e3e0efc1cbc992362be",
      "kind": "transparent"
    },
    {
      "address": "0x6606cd1c7b7Df63c6ca70B2d2e68e46d19DdDE9a",
      "txHash": "0x5422caba2898ca33d5d900db2efa7cc130f1a2b1019c7f544b3b1cb21a4fcbb9",
      "kind": "transparent"
    },
    {
      "address": "0xC9a67E383c5b39bA48723C84Eb9095D9e0d13Ff9",
      "txHash": "0x9c6aac8b4c00d72e17e5c6944c8059b5489d1dac8063b4602050af1a8f43bb53",
      "kind": "transparent"
    },
    {
      "address": "0x8360B4E32f431A70a27d678B781A67ca29fF4F5A",
      "txHash": "0xe7dec454adad3a54a7386d09315ddea491bcd80841b4f1aea42db9f94b9108e3",
      "kind": "transparent"
    },
    {
      "address": "0xd87fA3d69D6c41d7877a949532a0E035Ff4ee575",
      "txHash": "0x49708e26f431f52a8a8ff9172d5ea42a42cd8b710b2f21cebf2dc8c4cfb14cec",
      "kind": "transparent"
    },
    {
      "address": "0x5236b48E1EB121Ca8B1d5DB64DdAcE764AD53D1A",
      "txHash": "0xb419149a7e921b9ec8731e821b21f380d360a0f40fdc6f4cd346e71d2ad50b81",
      "kind": "transparent"
    },
    {
      "address": "0xdd9bacf25fAfA302269aF5341Ecb224762EB0D32",
      "txHash": "0xae63a6a41cd0ce4c3286c257e5c77bb32144f7061d344575262a842e65aa1b6b",
      "kind": "transparent"
    },
    {
      "address": "0x11938E514FC800b1D8539dCB3FF2FF3FbD37C938",
      "txHash": "0x832b2f25a77c6af2bc1912350f00306313c5bff71233845c36a15500ff715726",
      "kind": "transparent"
    },
    {
      "address": "0x3026FAB0b7Ab3c3799697C2992e5B95F2Eb64337",
      "txHash": "0xc3858c596626b4e4959588d446c3ced4d128b9955dce5dda0be91a63cd13f291",
      "kind": "transparent"
    },
    {
      "address": "0xa49e794cC350Ce150372bfcB68A07C2Df294ad96",
      "txHash": "0x8ba349b9e852b410d358ee45d8ae88ed5ca18132a28638100233ff30da1ac2f6",
      "kind": "transparent"
    },
    {
      "address": "0xc7780b2BF9c6B5f04B3e929695EF5C97974F8883",
      "txHash": "0x066e85be031addfc39e6a40b53b4384aa60ae9762bb9068bc006109d60ed2fa9",
      "kind": "transparent"
    },
    {
      "address": "0x2E976FDB0dAFBD88e3A69D48C332e72db894688a",
      "txHash": "0x0906643a737a0d1236fb14cddd60062a7506812c8ca26c0703cc59bc43d2acee",
      "kind": "transparent"
    },
    {
      "address": "0x260e3B084f19a0684Ed730AA1f9bbecdD13E43e2",
      "txHash": "0x31ce1a8558af6830b9b1ec7f554de10ec3b734c782972d000605b0bc13665a69",
      "kind": "transparent"
    },
    {
      "address": "0x9FC5df68cFE7826D4E8a957E50DD0eef567518D8",
      "txHash": "0x2f3e0418e1b5cfc7e43b276efbd67ad52e2293a6e49ab1b57c8f038a7ff61b65",
      "kind": "transparent"
    },
    {
      "address": "0xa20F575F3754efEE0494E9FA1177209BAa85174B",
      "txHash": "0xd4ef1f9ffb34eacdf4b2b8902eb14df733decf8123047340777f72d87a4f231e",
      "kind": "transparent"
    },
    {
      "address": "0xbB047e6DaB367faE2eEbbd96867D2efe3C7158B3",
      "txHash": "0xe416902b2a929740bbc360d6418ed98527b183411508252f904406e3da5144a8",
      "kind": "transparent"
    },
    {
      "address": "0x02167acD64dA8201b845507E9a8ddec16fe1F7b3",
      "txHash": "0x9b9f64e1798fcc385ac13772c7980c2f0b2464fac16715651064aac9c7ce5ffc",
      "kind": "transparent"
    },
    {
      "address": "0xDDC03b04691Cb05708F2BCD6fd8Af4CA4de2843C",
      "txHash": "0x053944e01f91e6099c81dd51f97414b8c3ac4255a47030ba9b2d8deb317e2379",
      "kind": "transparent"
    },
    {
      "address": "0x843DA53761346a528121cC494883A4E7d2014a4e",
      "txHash": "0x4f668fd0d745a95f39b7b11af1e45f18892a0b168d7b55beefd55e55e129f492",
      "kind": "transparent"
    },
    {
      "address": "0x885D9cB05B2386Abd47c646348EDaAf00b3337Cc",
      "txHash": "0xd643f4a8b1a8dc32a1add70401eaa8dc98307c7f550a421e68ffccf6d3fd3211",
      "kind": "transparent"
    }
  ],
  "impls": {
    "3c6b0707fbd1183423cce0cb7017fae1fcf79233a65cbad633b7bd4508872a6e": {
      "address": "0x87e8316c5BBBB03D64362Eb12BCE10d8BF431027",
      "txHash": "0x7f585cf989fb687338ccaaa70f0cbd04d80755915224635b146542db6ec5f289",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "c4daf7bd9063734e9c694b0686e4a4fc20b25cc11e89100a675cface54736dd6": {
      "address": "0x3f7Db40d5Fc217e9D730d80e9CDeC4A160a511eE",
      "txHash": "0x629c85085f6f78ffb9375b545b7eb0c142e28d45a07c2d045dce7a3e77a1702d",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_admins",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AdminManagerUpgradable",
            "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AdminManagerUpgradable",
            "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "SupplyUpgradable",
            "src": "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:9"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SupplyUpgradable",
            "src": "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "AdminMintUpgradable",
            "src": "@chocolate-factory/contracts/admin-mint/AdminMintUpgradable.sol:29"
          },
          {
            "label": "_whitelists",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint8,t_struct(Data)1449_storage)",
            "contract": "WhitelistUpgradable",
            "src": "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)48_storage",
            "contract": "WhitelistUpgradable",
            "src": "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:67"
          },
          {
            "label": "_balanceLimits",
            "offset": 0,
            "slot": "350",
            "type": "t_mapping(t_uint8,t_struct(Data)337_storage)",
            "contract": "BalanceLimitUpgradable",
            "src": "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:12"
          },
          {
            "label": "_prefix",
            "offset": 0,
            "slot": "351",
            "type": "t_string_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:12"
          },
          {
            "label": "_suffix",
            "offset": 0,
            "slot": "352",
            "type": "t_string_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)48_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:51"
          },
          {
            "label": "_royalties",
            "offset": 0,
            "slot": "401",
            "type": "t_struct(RoyaltyInfo)720_storage",
            "contract": "RoyaltiesUpgradable",
            "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoyaltiesUpgradable",
            "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:77"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "451",
            "type": "t_mapping(t_uint8,t_uint256)",
            "contract": "PriceUpgradable",
            "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:10"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PriceUpgradable",
            "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:35"
          },
          {
            "label": "_totalShares",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:35"
          },
          {
            "label": "_totalReleased",
            "offset": 0,
            "slot": "502",
            "type": "t_uint256",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:36"
          },
          {
            "label": "_shares",
            "offset": 0,
            "slot": "503",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:38"
          },
          {
            "label": "_released",
            "offset": 0,
            "slot": "504",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:39"
          },
          {
            "label": "_payees",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:40"
          },
          {
            "label": "_erc20TotalReleased",
            "offset": 0,
            "slot": "506",
            "type": "t_mapping(t_contract(IERC20Upgradeable)2524,t_uint256)",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:42"
          },
          {
            "label": "_erc20Released",
            "offset": 0,
            "slot": "507",
            "type": "t_mapping(t_contract(IERC20Upgradeable)2524,t_mapping(t_address,t_uint256))",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:43"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "508",
            "type": "t_array(t_uint256)43_storage",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:216"
          },
          {
            "label": "payeesLength",
            "offset": 0,
            "slot": "551",
            "type": "t_uint256",
            "contract": "CustomPaymentSplitterUpgradeable",
            "src": "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:8"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "CustomPaymentSplitterUpgradeable",
            "src": "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:38"
          },
          {
            "label": "stage",
            "offset": 0,
            "slot": "601",
            "type": "t_enum(Stage)994",
            "contract": "TwoStage",
            "src": "@chocolate-factory/contracts/token/ERC721/presets/TwoStage.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2524": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_enum(Stage)994": {
            "label": "enum TwoStage.Stage",
            "members": [
              "Disabled",
              "Whitelist",
              "Public"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC20Upgradeable)2524,t_mapping(t_address,t_uint256))": {
            "label": "mapping(contract IERC20Upgradeable => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC20Upgradeable)2524,t_uint256)": {
            "label": "mapping(contract IERC20Upgradeable => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Data)1449_storage)": {
            "label": "mapping(uint8 => struct WhitelistStorage.Data)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Data)337_storage)": {
            "label": "mapping(uint8 => struct BalanceLimitStorage.Data)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Data)1449_storage": {
            "label": "struct WhitelistStorage.Data",
            "members": [
              {
                "label": "merkleTreeRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "accounts",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Data)337_storage": {
            "label": "struct BalanceLimitStorage.Data",
            "members": [
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)720_storage": {
            "label": "struct RoyaltiesUpgradable.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "f3125abc8d37ae9b2382c055ad1fc71df37f16deef525fa398149e16931a5366": {
      "address": "0x6ed78ef329B6DF23C375d20e4578580549ec8FEB",
      "txHash": "0x032f2668b899c4088ddc05d4a48fa86a03821299b1ef5f5f5fdff8599b394128",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_admins",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AdminManagerUpgradable",
            "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AdminManagerUpgradable",
            "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
          },
          {
            "label": "_prefix",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:12"
          },
          {
            "label": "_suffix",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:51"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint8,t_uint256)",
            "contract": "PriceUpgradable",
            "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:10"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PriceUpgradable",
            "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:35"
          },
          {
            "label": "_royalties",
            "offset": 0,
            "slot": "403",
            "type": "t_struct(RoyaltyInfo)543_storage",
            "contract": "RoyaltiesUpgradable",
            "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoyaltiesUpgradable",
            "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:77"
          },
          {
            "label": "_balanceLimits",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint8,t_struct(Data)254_storage)",
            "contract": "BalanceLimitUpgradable",
            "src": "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:12"
          },
          {
            "label": "signer",
            "offset": 0,
            "slot": "454",
            "type": "t_address",
            "contract": "SignerUpgradeable",
            "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "455",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SignerUpgradeable",
            "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:37"
          },
          {
            "label": "activeIndex",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "Packets",
            "src": "contracts/Packets.sol:32"
          },
          {
            "label": "idToCards",
            "offset": 0,
            "slot": "505",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:33"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "506",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:34"
          },
          {
            "label": "gbabiesContract",
            "offset": 0,
            "slot": "507",
            "type": "t_contract(IERC721ABurnableUpgradeable)5394",
            "contract": "Packets",
            "src": "contracts/Packets.sol:70"
          },
          {
            "label": "quillContract",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(IERC721ABurnableUpgradeable)5394",
            "contract": "Packets",
            "src": "contracts/Packets.sol:71"
          },
          {
            "label": "cardsContract",
            "offset": 0,
            "slot": "509",
            "type": "t_contract(ICards)5160",
            "contract": "Packets",
            "src": "contracts/Packets.sol:72"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:84"
          },
          {
            "label": "_isOG",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:85"
          },
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "512",
            "type": "t_contract(IRandomizer)5172",
            "contract": "Packets",
            "src": "contracts/Packets.sol:372"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICards)5160": {
            "label": "contract ICards",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721ABurnableUpgradeable)5394": {
            "label": "contract IERC721ABurnableUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomizer)5172": {
            "label": "contract IRandomizer",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Data)254_storage)": {
            "label": "mapping(uint8 => struct BalanceLimitStorage.Data)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Data)254_storage": {
            "label": "struct BalanceLimitStorage.Data",
            "members": [
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)543_storage": {
            "label": "struct RoyaltiesUpgradable.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "3d53b172707d4a8d0de7f7d2648cd9d69ab62ef5d0b5fdaf93f5ca097d4b3517": {
      "address": "0xd8F458720E655C1e827A6F55eb55c0e4E8803422",
      "txHash": "0x5c6ba1fb3c1e2003c6742a01a5f4a11130f6d23f7e01e6fb7dca2f91e1f6bad5",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_admins",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AdminManagerUpgradable",
            "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AdminManagerUpgradable",
            "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "SupplyUpgradable",
            "src": "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:9"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SupplyUpgradable",
            "src": "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "AdminMintUpgradable",
            "src": "@chocolate-factory/contracts/admin-mint/AdminMintUpgradable.sol:29"
          },
          {
            "label": "_whitelists",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint8,t_struct(Data)1519_storage)",
            "contract": "WhitelistUpgradable",
            "src": "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)48_storage",
            "contract": "WhitelistUpgradable",
            "src": "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:67"
          },
          {
            "label": "_balanceLimits",
            "offset": 0,
            "slot": "350",
            "type": "t_mapping(t_uint8,t_struct(Data)337_storage)",
            "contract": "BalanceLimitUpgradable",
            "src": "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:12"
          },
          {
            "label": "_prefix",
            "offset": 0,
            "slot": "351",
            "type": "t_string_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:12"
          },
          {
            "label": "_suffix",
            "offset": 0,
            "slot": "352",
            "type": "t_string_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)48_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:51"
          },
          {
            "label": "_royalties",
            "offset": 0,
            "slot": "401",
            "type": "t_struct(RoyaltyInfo)720_storage",
            "contract": "RoyaltiesUpgradable",
            "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoyaltiesUpgradable",
            "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:77"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "451",
            "type": "t_mapping(t_uint8,t_uint256)",
            "contract": "PriceUpgradable",
            "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:10"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PriceUpgradable",
            "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:35"
          },
          {
            "label": "_totalShares",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:35"
          },
          {
            "label": "_totalReleased",
            "offset": 0,
            "slot": "502",
            "type": "t_uint256",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:36"
          },
          {
            "label": "_shares",
            "offset": 0,
            "slot": "503",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:38"
          },
          {
            "label": "_released",
            "offset": 0,
            "slot": "504",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:39"
          },
          {
            "label": "_payees",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:40"
          },
          {
            "label": "_erc20TotalReleased",
            "offset": 0,
            "slot": "506",
            "type": "t_mapping(t_contract(IERC20Upgradeable)2594,t_uint256)",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:42"
          },
          {
            "label": "_erc20Released",
            "offset": 0,
            "slot": "507",
            "type": "t_mapping(t_contract(IERC20Upgradeable)2594,t_mapping(t_address,t_uint256))",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:43"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "508",
            "type": "t_array(t_uint256)43_storage",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:216"
          },
          {
            "label": "payeesLength",
            "offset": 0,
            "slot": "551",
            "type": "t_uint256",
            "contract": "CustomPaymentSplitterUpgradeable",
            "src": "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:8"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "CustomPaymentSplitterUpgradeable",
            "src": "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:38"
          },
          {
            "label": "stage",
            "offset": 0,
            "slot": "601",
            "type": "t_uint8",
            "contract": "Base",
            "src": "@chocolate-factory/contracts/token/ERC721/presets/Base.sol:34"
          },
          {
            "label": "packets",
            "offset": 1,
            "slot": "601",
            "type": "t_address",
            "contract": "Cards",
            "src": "contracts/Cards.sol:6"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2594": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC20Upgradeable)2594,t_mapping(t_address,t_uint256))": {
            "label": "mapping(contract IERC20Upgradeable => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC20Upgradeable)2594,t_uint256)": {
            "label": "mapping(contract IERC20Upgradeable => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Data)1519_storage)": {
            "label": "mapping(uint8 => struct WhitelistStorage.Data)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Data)337_storage)": {
            "label": "mapping(uint8 => struct BalanceLimitStorage.Data)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Data)1519_storage": {
            "label": "struct WhitelistStorage.Data",
            "members": [
              {
                "label": "merkleTreeRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "accounts",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Data)337_storage": {
            "label": "struct BalanceLimitStorage.Data",
            "members": [
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)720_storage": {
            "label": "struct RoyaltiesUpgradable.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ef0aec631c0b50e1e070033ea5413723109fee861d8e4f9a2fe8677fd200f682": {
      "address": "0x053a2119FB13f8BF54f00Ce6AbF957a5D0BA9bc2",
      "txHash": "0x41b9b44befa92b74440673abc96e6f4abe8dfbd979d2a6077d8f006b31d3ed3b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "seed",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "Randomizer",
            "src": "contracts/Randomizer.sol:8"
          },
          {
            "label": "caller",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Randomizer",
            "src": "contracts/Randomizer.sol:9"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "d2541f25881d389ddccb319adf7dd152811559820ffb557da57c732bcd585b5a": {
      "address": "0x2d19aeae8F256520308c3113131219438287951B",
      "txHash": "0x64c83621e3af4fb71106cb8cb0d7752226ccbb6e0434c19572839bb01cdabda8",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_admins",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AdminManagerUpgradable",
            "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AdminManagerUpgradable",
            "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
          },
          {
            "label": "_prefix",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:12"
          },
          {
            "label": "_suffix",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:51"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint8,t_uint256)",
            "contract": "PriceUpgradable",
            "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:10"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PriceUpgradable",
            "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:35"
          },
          {
            "label": "_royalties",
            "offset": 0,
            "slot": "403",
            "type": "t_struct(RoyaltyInfo)543_storage",
            "contract": "RoyaltiesUpgradable",
            "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoyaltiesUpgradable",
            "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:77"
          },
          {
            "label": "_balanceLimits",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint8,t_struct(Data)254_storage)",
            "contract": "BalanceLimitUpgradable",
            "src": "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:12"
          },
          {
            "label": "signer",
            "offset": 0,
            "slot": "454",
            "type": "t_address",
            "contract": "SignerUpgradeable",
            "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "455",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SignerUpgradeable",
            "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:37"
          },
          {
            "label": "activeIndex",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "Packets",
            "src": "contracts/Packets.sol:32"
          },
          {
            "label": "idToCards",
            "offset": 0,
            "slot": "505",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:33"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "506",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:34"
          },
          {
            "label": "gbabiesContract",
            "offset": 0,
            "slot": "507",
            "type": "t_contract(IERC721ABurnableUpgradeable)5400",
            "contract": "Packets",
            "src": "contracts/Packets.sol:70"
          },
          {
            "label": "quillContract",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(IERC721ABurnableUpgradeable)5400",
            "contract": "Packets",
            "src": "contracts/Packets.sol:71"
          },
          {
            "label": "cardsContract",
            "offset": 0,
            "slot": "509",
            "type": "t_contract(ICards)5166",
            "contract": "Packets",
            "src": "contracts/Packets.sol:72"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:84"
          },
          {
            "label": "_isOG",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:85"
          },
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "512",
            "type": "t_contract(IRandomizer)5178",
            "contract": "Packets",
            "src": "contracts/Packets.sol:372"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICards)5166": {
            "label": "contract ICards",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721ABurnableUpgradeable)5400": {
            "label": "contract IERC721ABurnableUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomizer)5178": {
            "label": "contract IRandomizer",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Data)254_storage)": {
            "label": "mapping(uint8 => struct BalanceLimitStorage.Data)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Data)254_storage": {
            "label": "struct BalanceLimitStorage.Data",
            "members": [
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)543_storage": {
            "label": "struct RoyaltiesUpgradable.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "3e9c9d410a66bceaf34d8b3eacbcba78dfb22d0df209c8787aab09d867557dcd": {
      "address": "0x290138e756224506F934950B00da12E4880ac37B",
      "txHash": "0xcc786abdc60bfcef23c6f97bb64c328230ccdb452c1c5b59b85ff04ebed12ea9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_admins",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AdminManagerUpgradable",
            "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AdminManagerUpgradable",
            "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
          },
          {
            "label": "_prefix",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:12"
          },
          {
            "label": "_suffix",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:51"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint8,t_uint256)",
            "contract": "PriceUpgradable",
            "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:10"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PriceUpgradable",
            "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:35"
          },
          {
            "label": "_royalties",
            "offset": 0,
            "slot": "403",
            "type": "t_struct(RoyaltyInfo)543_storage",
            "contract": "RoyaltiesUpgradable",
            "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoyaltiesUpgradable",
            "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:77"
          },
          {
            "label": "_balanceLimits",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint8,t_struct(Data)254_storage)",
            "contract": "BalanceLimitUpgradable",
            "src": "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:12"
          },
          {
            "label": "signer",
            "offset": 0,
            "slot": "454",
            "type": "t_address",
            "contract": "SignerUpgradeable",
            "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "455",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SignerUpgradeable",
            "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:37"
          },
          {
            "label": "activeIndex",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "Packets",
            "src": "contracts/Packets.sol:32"
          },
          {
            "label": "idToCards",
            "offset": 0,
            "slot": "505",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:33"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "506",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:34"
          },
          {
            "label": "gbabiesContract",
            "offset": 0,
            "slot": "507",
            "type": "t_contract(IERC721ABurnableUpgradeable)5390",
            "contract": "Packets",
            "src": "contracts/Packets.sol:70"
          },
          {
            "label": "quillContract",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(IERC721ABurnableUpgradeable)5390",
            "contract": "Packets",
            "src": "contracts/Packets.sol:71"
          },
          {
            "label": "cardsContract",
            "offset": 0,
            "slot": "509",
            "type": "t_contract(ICards)5156",
            "contract": "Packets",
            "src": "contracts/Packets.sol:72"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:84"
          },
          {
            "label": "_isOG",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:85"
          },
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "512",
            "type": "t_contract(IRandomizer)5168",
            "contract": "Packets",
            "src": "contracts/Packets.sol:370"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICards)5156": {
            "label": "contract ICards",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721ABurnableUpgradeable)5390": {
            "label": "contract IERC721ABurnableUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomizer)5168": {
            "label": "contract IRandomizer",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Data)254_storage)": {
            "label": "mapping(uint8 => struct BalanceLimitStorage.Data)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Data)254_storage": {
            "label": "struct BalanceLimitStorage.Data",
            "members": [
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)543_storage": {
            "label": "struct RoyaltiesUpgradable.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "d1861a33f794046f1da5c0f41494db4e42fff968e4c6b2015063cb390edd4710": {
      "address": "0x476Ab8918c0cc30ef51162ae90B9A7df14F0A949",
      "txHash": "0xaf098b0f27512b85d6415fc57db8ad5a1ffdc86a359cab66f2c3e4834bcdfdab",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_admins",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AdminManagerUpgradable",
            "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AdminManagerUpgradable",
            "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
          },
          {
            "label": "_prefix",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:12"
          },
          {
            "label": "_suffix",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:51"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint8,t_uint256)",
            "contract": "PriceUpgradable",
            "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:10"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PriceUpgradable",
            "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:35"
          },
          {
            "label": "_royalties",
            "offset": 0,
            "slot": "403",
            "type": "t_struct(RoyaltyInfo)543_storage",
            "contract": "RoyaltiesUpgradable",
            "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoyaltiesUpgradable",
            "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:77"
          },
          {
            "label": "_balanceLimits",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint8,t_struct(Data)254_storage)",
            "contract": "BalanceLimitUpgradable",
            "src": "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:12"
          },
          {
            "label": "signer",
            "offset": 0,
            "slot": "454",
            "type": "t_address",
            "contract": "SignerUpgradeable",
            "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "455",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SignerUpgradeable",
            "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:37"
          },
          {
            "label": "activeIndex",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "Packets",
            "src": "contracts/Packets.sol:32"
          },
          {
            "label": "idToCards",
            "offset": 0,
            "slot": "505",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:33"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "506",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:34"
          },
          {
            "label": "gbabiesContract",
            "offset": 0,
            "slot": "507",
            "type": "t_contract(IERC721ABurnableUpgradeable)5401",
            "contract": "Packets",
            "src": "contracts/Packets.sol:70"
          },
          {
            "label": "quillContract",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(IERC721ABurnableUpgradeable)5401",
            "contract": "Packets",
            "src": "contracts/Packets.sol:71"
          },
          {
            "label": "cardsContract",
            "offset": 0,
            "slot": "509",
            "type": "t_contract(ICards)5167",
            "contract": "Packets",
            "src": "contracts/Packets.sol:72"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:84"
          },
          {
            "label": "_isOG",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:85"
          },
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "512",
            "type": "t_contract(IRandomizer)5179",
            "contract": "Packets",
            "src": "contracts/Packets.sol:370"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICards)5167": {
            "label": "contract ICards",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721ABurnableUpgradeable)5401": {
            "label": "contract IERC721ABurnableUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomizer)5179": {
            "label": "contract IRandomizer",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Data)254_storage)": {
            "label": "mapping(uint8 => struct BalanceLimitStorage.Data)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Data)254_storage": {
            "label": "struct BalanceLimitStorage.Data",
            "members": [
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)543_storage": {
            "label": "struct RoyaltiesUpgradable.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ece1bdc98a191b46d1e6b21d69fb78db35848c296aca5ae1973ed5ffa6dc4fdb": {
      "address": "0x25f7C6017bb090CBB6501fc88CC6A032e7766997",
      "txHash": "0x414a18653429d2ecd2127b1c9f4108450335c90bf532699d1b4aaaa43468e932",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_admins",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AdminManagerUpgradable",
            "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AdminManagerUpgradable",
            "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
          },
          {
            "label": "_prefix",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:12"
          },
          {
            "label": "_suffix",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "UriManagerUpgradable",
            "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:51"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint8,t_uint256)",
            "contract": "PriceUpgradable",
            "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:10"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PriceUpgradable",
            "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:35"
          },
          {
            "label": "_royalties",
            "offset": 0,
            "slot": "403",
            "type": "t_struct(RoyaltyInfo)543_storage",
            "contract": "RoyaltiesUpgradable",
            "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoyaltiesUpgradable",
            "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:77"
          },
          {
            "label": "_balanceLimits",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint8,t_struct(Data)254_storage)",
            "contract": "BalanceLimitUpgradable",
            "src": "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:12"
          },
          {
            "label": "signer",
            "offset": 0,
            "slot": "454",
            "type": "t_address",
            "contract": "SignerUpgradeable",
            "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "455",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SignerUpgradeable",
            "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:37"
          },
          {
            "label": "activeIndex",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "Packets",
            "src": "contracts/Packets.sol:32"
          },
          {
            "label": "idToCards",
            "offset": 0,
            "slot": "505",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:33"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "506",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:34"
          },
          {
            "label": "gbabiesContract",
            "offset": 0,
            "slot": "507",
            "type": "t_contract(IERC721ABurnableUpgradeable)5403",
            "contract": "Packets",
            "src": "contracts/Packets.sol:70"
          },
          {
            "label": "quillContract",
            "offset": 0,
            "slot": "508",
            "type": "t_contract(IERC721ABurnableUpgradeable)5403",
            "contract": "Packets",
            "src": "contracts/Packets.sol:71"
          },
          {
            "label": "cardsContract",
            "offset": 0,
            "slot": "509",
            "type": "t_contract(ICards)5169",
            "contract": "Packets",
            "src": "contracts/Packets.sol:72"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:84"
          },
          {
            "label": "_isOG",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Packets",
            "src": "contracts/Packets.sol:85"
          },
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "512",
            "type": "t_contract(IRandomizer)5181",
            "contract": "Packets",
            "src": "contracts/Packets.sol:370"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICards)5169": {
            "label": "contract ICards",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721ABurnableUpgradeable)5403": {
            "label": "contract IERC721ABurnableUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomizer)5181": {
            "label": "contract IRandomizer",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Data)254_storage)": {
            "label": "mapping(uint8 => struct BalanceLimitStorage.Data)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Data)254_storage": {
            "label": "struct BalanceLimitStorage.Data",
            "members": [
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)543_storage": {
            "label": "struct RoyaltiesUpgradable.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
