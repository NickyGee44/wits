{
  "version": "3.4",
  "log": [
    {
      "@chocolate-factory/contracts/admin-manager/AdminManager.sol:AdminManager": {
        "src": "@chocolate-factory/contracts/admin-manager/AdminManager.sol:5",
        "version": {
          "withMetadata": "92b21d8b6981ff1197a482d3d260a9447b10b7885f29f2f5488c3d5bacc571c9",
          "withoutMetadata": "d9e89000870ce2d5f16cc176930aa7d3dc3f0e1159b7d54f75a285fb48984bf1",
          "linkedWithoutMetadata": "d9e89000870ce2d5f16cc176930aa7d3dc3f0e1159b7d54f75a285fb48984bf1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "setAdminPermissions(address,bool)",
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AdminManager",
            "src": "@chocolate-factory/contracts/admin-manager/AdminManager.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_admins",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManager",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManager.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable": {
        "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:6",
        "version": {
          "withMetadata": "fba26d4386e72daeb6802f71743c2e5e7adacd5c7d2d3ae7af35bb7037ad1902",
          "withoutMetadata": "1e289965d10b2014ce2e28207091443e13eeaeb26e48cde07448745ac5b8bf99",
          "linkedWithoutMetadata": "1e289965d10b2014ce2e28207091443e13eeaeb26e48cde07448745ac5b8bf99"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "setAdminPermissions(address,bool)",
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/balance-limit/BalanceLimit.sol:BalanceLimit": {
        "src": "@chocolate-factory/contracts/balance-limit/BalanceLimit.sol:8",
        "version": {
          "withMetadata": "62aa9e69cd21dc0a602153b37de0d0dd720541df08b3e2f49794ec60e0dad23d",
          "withoutMetadata": "cc45db747ea7b008f7ef3e6113f1ee304ca928275cf690d0c49b0f318732e425",
          "linkedWithoutMetadata": "cc45db747ea7b008f7ef3e6113f1ee304ca928275cf690d0c49b0f318732e425"
        },
        "inherit": [
          "@chocolate-factory/contracts/admin-manager/AdminManager.sol:AdminManager"
        ],
        "libraries": [
          "@chocolate-factory/contracts/balance-limit/BalanceLimitStorage.sol:BalanceLimitStorage"
        ],
        "methods": [
          "currentBalance(uint8,address)",
          "remainingBalance(uint8,address)",
          "updateBalanceLimit(uint8,uint256)",
          "balanceLimit(uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_admins",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManager",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManager.sol:6"
            },
            {
              "label": "_balanceLimits",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint8,t_struct(Data)254_storage)",
              "contract": "BalanceLimit",
              "src": "@chocolate-factory/contracts/balance-limit/BalanceLimit.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_struct(Data)254_storage)": {
              "label": "mapping(uint8 => struct BalanceLimitStorage.Data)",
              "numberOfBytes": "32"
            },
            "t_struct(Data)254_storage": {
              "label": "struct BalanceLimitStorage.Data",
              "members": [
                {
                  "label": "limit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/balance-limit/BalanceLimitStorage.sol:BalanceLimitStorage": {
        "src": "@chocolate-factory/contracts/balance-limit/BalanceLimitStorage.sol:5",
        "version": {
          "withMetadata": "8c40b2764efc24967cadab6c4778beb3d4aa7908b3496f9decab3e0af1ad45b4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:BalanceLimitUpgradable": {
        "src": "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:9",
        "version": {
          "withMetadata": "12711f48933eee92bffe8f8e592c3a9e304162e9ed34b41fc7eb36b2cead5383",
          "withoutMetadata": "50f180af8594ec1bbb99710472b9f88c21b323965163c4a0ce4a371f44b46243",
          "linkedWithoutMetadata": "50f180af8594ec1bbb99710472b9f88c21b323965163c4a0ce4a371f44b46243"
        },
        "inherit": [
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@chocolate-factory/contracts/balance-limit/BalanceLimitStorage.sol:BalanceLimitStorage"
        ],
        "methods": [
          "currentBalance(uint8,address)",
          "remainingBalance(uint8,address)",
          "updateBalanceLimit(uint8,uint256)",
          "balanceLimit(uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "_balanceLimits",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_uint8,t_struct(Data)254_storage)",
              "contract": "BalanceLimitUpgradable",
              "src": "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_struct(Data)254_storage)": {
              "label": "mapping(uint8 => struct BalanceLimitStorage.Data)",
              "numberOfBytes": "32"
            },
            "t_struct(Data)254_storage": {
              "label": "struct BalanceLimitStorage.Data",
              "members": [
                {
                  "label": "limit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/price/PriceUpgradable.sol:PriceUpgradable": {
        "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:9",
        "version": {
          "withMetadata": "a06ad1709cb5382a80fb82eee66608cdb12689868edff037adff23bc391b8bcc",
          "withoutMetadata": "44d2ab31796d2e0ea6a2c5fb09810a0818e6c14deb91db2cb3c8a97a3f4544c5",
          "linkedWithoutMetadata": "44d2ab31796d2e0ea6a2c5fb09810a0818e6c14deb91db2cb3c8a97a3f4544c5"
        },
        "inherit": [
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "setPrice(uint8,uint256)",
          "price(uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "_price",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "PriceUpgradable",
              "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:10"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PriceUpgradable",
              "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/royalties/IERC2981Royalties.sol:IERC2981Royalties": {
        "src": "@chocolate-factory/contracts/royalties/IERC2981Royalties.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:RoyaltiesUpgradable": {
        "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:10",
        "version": {
          "withMetadata": "c8b116bd39cb37dd95db43f69c573109cfab271503c9d73bedb13adc6214a43b",
          "withoutMetadata": "fe88b734c9d80a9aedb69511bfcf1806a4ccd4ab2fd741588fc3a39c55521f1a",
          "linkedWithoutMetadata": "fe88b734c9d80a9aedb69511bfcf1806a4ccd4ab2fd741588fc3a39c55521f1a"
        },
        "inherit": [
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@chocolate-factory/contracts/royalties/IERC2981Royalties.sol:IERC2981Royalties",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "setRoyalties(address,uint256)",
          "royaltyInfo(uint256,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "_royalties",
              "offset": 0,
              "slot": "101",
              "type": "t_struct(RoyaltyInfo)543_storage",
              "contract": "RoyaltiesUpgradable",
              "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "RoyaltiesUpgradable",
              "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)543_storage": {
              "label": "struct RoyaltiesUpgradable.RoyaltyInfo",
              "members": [
                {
                  "label": "recipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:SignerUpgradeable": {
        "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:9",
        "version": {
          "withMetadata": "5f5d874e1fd08aad62abe655539c5dfe6e298f299a1baad735066643b9049a3f",
          "withoutMetadata": "899ae9d44914922dba5e66eb618855c68d0ffd25d82cbc0d63b045a7e2baa68e",
          "linkedWithoutMetadata": "899ae9d44914922dba5e66eb618855c68d0ffd25d82cbc0d63b045a7e2baa68e"
        },
        "inherit": [
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol:IERC5267Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:ECDSAUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_hashedName",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
              "renamedFrom": "_HASHED_NAME"
            },
            {
              "label": "_hashedVersion",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
              "renamedFrom": "_HASHED_VERSION"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
            },
            {
              "label": "_version",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)48_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "SignerUpgradeable",
              "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:12"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)49_storage",
              "contract": "SignerUpgradeable",
              "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/supply/ReservedSupplyUpgradeable.sol:ReservedSupplyUpgradable": {
        "src": "@chocolate-factory/contracts/supply/ReservedSupplyUpgradeable.sol:8",
        "inherit": [
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "setReservedSupply(uint256,uint256)",
          "reservedSupply(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "_reserved",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ReservedSupplyUpgradable",
              "src": "@chocolate-factory/contracts/supply/ReservedSupplyUpgradeable.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReservedSupplyUpgradable",
              "src": "@chocolate-factory/contracts/supply/ReservedSupplyUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:UriManagerUpgradable": {
        "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:9",
        "version": {
          "withMetadata": "b8a1fca32b0f65dcb3b832b150e51fdac4784e46a6d5afa1cd0beb396148aa28",
          "withoutMetadata": "a6199aaf62e700cf99b72bec0faadbe77c2bf4b70d334b7ae9f0705a65ae867a",
          "linkedWithoutMetadata": "a6199aaf62e700cf99b72bec0faadbe77c2bf4b70d334b7ae9f0705a65ae867a"
        },
        "inherit": [
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "prefix()",
          "suffix()",
          "setPrefix(string)",
          "setSuffix(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "_prefix",
              "offset": 0,
              "slot": "51",
              "type": "t_string_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:12"
            },
            {
              "label": "_suffix",
              "offset": 0,
              "slot": "52",
              "type": "t_string_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:13"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)48_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol:IERC5267Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:21",
        "version": {
          "withMetadata": "c2adb61eaae356fe552a836d39ae114f5e66be430af5a573cc7c5e0dcd894f68",
          "withoutMetadata": "52f5fba6fb0bed0f97581f696b77a6aa7a382a7ec20adf954f89c5bd390b00e5",
          "linkedWithoutMetadata": "52f5fba6fb0bed0f97581f696b77a6aa7a382a7ec20adf954f89c5bd390b00e5"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "7834828060f66da0039d30efb993f5f2643830d689ce2cdff803e8bbc308450e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:12",
        "version": {
          "withMetadata": "906cb7f0f5843b27e17df40f0dd37e51fd474892ce29df3caa57f7fc546ad01a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol:SignedMathUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:ECDSAUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:14",
        "version": {
          "withMetadata": "d56dabd2b65ded96fca818086b2a2fd86ae5f0bda70fbccc2a0eecc15ed15953",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:35",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol:IERC5267Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:ECDSAUpgradeable"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_hashedName",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
              "renamedFrom": "_HASHED_NAME"
            },
            {
              "label": "_hashedVersion",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
              "renamedFrom": "_HASHED_VERSION"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
            },
            {
              "label": "_version",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)48_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
            }
          ],
          "types": {
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "702cc24e7a5c1d8e4d3a9f406b88de52aca211c426d4604c89a179d27c75ca0d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol:SignedMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol:9",
        "version": {
          "withMetadata": "7f865809d60e93c3efd7b1af4bb15ff776ba9f3c7d1dc7885f79e07cc58f912c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/src/contracts/Packets.sol:Packets": {
        "src": "contracts/src/contracts/Packets.sol:20",
        "version": {
          "withMetadata": "70b6981f8301ea568a56532d38d993187560c3987d15b53a95724774ba3a0d6d",
          "withoutMetadata": "d5002293637781639a7fa5d30b69fdde2c662672c6a7d4e0ad27121c8035f6e2",
          "linkedWithoutMetadata": "d5002293637781639a7fa5d30b69fdde2c662672c6a7d4e0ad27121c8035f6e2"
        },
        "inherit": [
          "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:SignerUpgradeable",
          "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:BalanceLimitUpgradable",
          "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:RoyaltiesUpgradable",
          "operator-filter-registry/src/upgradeable/DefaultOperatorFiltererUpgradeable.sol:DefaultOperatorFiltererUpgradeable",
          "operator-filter-registry/src/upgradeable/OperatorFiltererUpgradeable.sol:OperatorFiltererUpgradeable",
          "@chocolate-factory/contracts/price/PriceUpgradable.sol:PriceUpgradable",
          "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:UriManagerUpgradable",
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol:IERC5267Upgradeable",
          "@chocolate-factory/contracts/royalties/IERC2981Royalties.sol:IERC2981Royalties",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256,string,string,address)",
          "setContracts(address,address,address)",
          "setActiveIndex(uint256)",
          "burnMint(uint256[],uint256[])",
          "presaleMint((uint256,address),struct Packets.MintRequest[],bytes)",
          "publicMint(struct Packets.MintRequest[])",
          "setDiscountPrice(uint256)",
          "adminMint(address[],uint256[],uint256)",
          "setSigner(address)",
          "uri(uint256)",
          "withdraw(uint256)",
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "supportsInterface(bytes4)",
          "open(uint256[],uint256[])",
          "getTotal(uint256[])",
          "minted(address)",
          "totalSupply(uint256)",
          "setRandomizer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_hashedName",
              "offset": 0,
              "slot": "201",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
              "renamedFrom": "_HASHED_NAME"
            },
            {
              "label": "_hashedVersion",
              "offset": 0,
              "slot": "202",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
              "renamedFrom": "_HASHED_VERSION"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
            },
            {
              "label": "_version",
              "offset": 0,
              "slot": "204",
              "type": "t_string_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "205",
              "type": "t_array(t_uint256)48_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "253",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "254",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "_prefix",
              "offset": 0,
              "slot": "303",
              "type": "t_string_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:12"
            },
            {
              "label": "_suffix",
              "offset": 0,
              "slot": "304",
              "type": "t_string_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:13"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)48_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:51"
            },
            {
              "label": "_price",
              "offset": 0,
              "slot": "353",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "PriceUpgradable",
              "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:10"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "354",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PriceUpgradable",
              "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:35"
            },
            {
              "label": "_royalties",
              "offset": 0,
              "slot": "403",
              "type": "t_struct(RoyaltyInfo)543_storage",
              "contract": "RoyaltiesUpgradable",
              "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "404",
              "type": "t_array(t_uint256)49_storage",
              "contract": "RoyaltiesUpgradable",
              "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:77"
            },
            {
              "label": "_balanceLimits",
              "offset": 0,
              "slot": "453",
              "type": "t_mapping(t_uint8,t_struct(Data)254_storage)",
              "contract": "BalanceLimitUpgradable",
              "src": "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:12"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "454",
              "type": "t_address",
              "contract": "SignerUpgradeable",
              "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:12"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "455",
              "type": "t_array(t_uint256)49_storage",
              "contract": "SignerUpgradeable",
              "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:37"
            },
            {
              "label": "activeIndex",
              "offset": 0,
              "slot": "504",
              "type": "t_uint256",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:32"
            },
            {
              "label": "idToCards",
              "offset": 0,
              "slot": "505",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:33"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "506",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:34"
            },
            {
              "label": "gbabiesContract",
              "offset": 0,
              "slot": "507",
              "type": "t_contract(IERC721ABurnableUpgradeable)6932",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:125"
            },
            {
              "label": "quillContract",
              "offset": 0,
              "slot": "508",
              "type": "t_contract(IERC721ABurnableUpgradeable)6932",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:126"
            },
            {
              "label": "cardsContract",
              "offset": 0,
              "slot": "509",
              "type": "t_contract(ICards)6698",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:127"
            },
            {
              "label": "_minted",
              "offset": 0,
              "slot": "510",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:139"
            },
            {
              "label": "_isOG",
              "offset": 0,
              "slot": "511",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:140"
            },
            {
              "label": "discountPrice",
              "offset": 0,
              "slot": "512",
              "type": "t_uint256",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:292"
            },
            {
              "label": "randomizer",
              "offset": 0,
              "slot": "513",
              "type": "t_contract(IRandomizer)6710",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:431"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ICards)6698": {
              "label": "contract ICards",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721ABurnableUpgradeable)6932": {
              "label": "contract IERC721ABurnableUpgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IRandomizer)6710": {
              "label": "contract IRandomizer",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_struct(Data)254_storage)": {
              "label": "mapping(uint8 => struct BalanceLimitStorage.Data)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Data)254_storage": {
              "label": "struct BalanceLimitStorage.Data",
              "members": [
                {
                  "label": "limit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)543_storage": {
              "label": "struct RoyaltiesUpgradable.RoyaltyInfo",
              "members": [
                {
                  "label": "recipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/src/contracts/interfaces/ICards.sol:ICards": {
        "src": "contracts/src/contracts/interfaces/ICards.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/src/contracts/interfaces/IRandomizer.sol:IRandomizer": {
        "src": "contracts/src/contracts/interfaces/IRandomizer.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "random(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol:IERC721AUpgradeable": {
        "src": "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "erc721a-upgradeable/contracts/extensions/IERC721ABurnableUpgradeable.sol:IERC721ABurnableUpgradeable": {
        "src": "erc721a-upgradeable/contracts/extensions/IERC721ABurnableUpgradeable.sol:12",
        "inherit": [
          "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol:IERC721AUpgradeable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "operator-filter-registry/src/IOperatorFilterRegistry.sol:IOperatorFilterRegistry": {
        "src": "operator-filter-registry/src/IOperatorFilterRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isOperatorAllowed(address,address)",
          "register(address)",
          "registerAndSubscribe(address,address)",
          "registerAndCopyEntries(address,address)",
          "unregister(address)",
          "updateOperator(address,address,bool)",
          "updateOperators(address,address[],bool)",
          "updateCodeHash(address,bytes32,bool)",
          "updateCodeHashes(address,bytes32[],bool)",
          "subscribe(address,address)",
          "unsubscribe(address,bool)",
          "subscriptionOf(address)",
          "subscribers(address)",
          "subscriberAt(address,uint256)",
          "copyEntriesOf(address,address)",
          "isOperatorFiltered(address,address)",
          "isCodeHashOfFiltered(address,address)",
          "isCodeHashFiltered(address,bytes32)",
          "filteredOperators(address)",
          "filteredCodeHashes(address)",
          "filteredOperatorAt(address,uint256)",
          "filteredCodeHashAt(address,uint256)",
          "isRegistered(address)",
          "codeHashOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "operator-filter-registry/src/upgradeable/DefaultOperatorFiltererUpgradeable.sol:DefaultOperatorFiltererUpgradeable": {
        "src": "operator-filter-registry/src/upgradeable/DefaultOperatorFiltererUpgradeable.sol:12",
        "inherit": [
          "operator-filter-registry/src/upgradeable/OperatorFiltererUpgradeable.sol:OperatorFiltererUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "operator-filter-registry/src/upgradeable/OperatorFiltererUpgradeable.sol:OperatorFiltererUpgradeable": {
        "src": "operator-filter-registry/src/upgradeable/OperatorFiltererUpgradeable.sol:15",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      }
    },
    {
      "@chocolate-factory/contracts/admin-manager/AdminManager.sol:AdminManager": {
        "src": "@chocolate-factory/contracts/admin-manager/AdminManager.sol:5",
        "version": {
          "withMetadata": "92b21d8b6981ff1197a482d3d260a9447b10b7885f29f2f5488c3d5bacc571c9",
          "withoutMetadata": "d9e89000870ce2d5f16cc176930aa7d3dc3f0e1159b7d54f75a285fb48984bf1",
          "linkedWithoutMetadata": "d9e89000870ce2d5f16cc176930aa7d3dc3f0e1159b7d54f75a285fb48984bf1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "setAdminPermissions(address,bool)",
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AdminManager",
            "src": "@chocolate-factory/contracts/admin-manager/AdminManager.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_admins",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManager",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManager.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable": {
        "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:6",
        "version": {
          "withMetadata": "fba26d4386e72daeb6802f71743c2e5e7adacd5c7d2d3ae7af35bb7037ad1902",
          "withoutMetadata": "1e289965d10b2014ce2e28207091443e13eeaeb26e48cde07448745ac5b8bf99",
          "linkedWithoutMetadata": "1e289965d10b2014ce2e28207091443e13eeaeb26e48cde07448745ac5b8bf99"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "setAdminPermissions(address,bool)",
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/admin-mint/AdminMintUpgradable.sol:AdminMintUpgradable": {
        "src": "@chocolate-factory/contracts/admin-mint/AdminMintUpgradable.sol:8",
        "inherit": [
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "adminMint(address[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "AdminMintUpgradable",
              "src": "@chocolate-factory/contracts/admin-mint/AdminMintUpgradable.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/balance-limit/BalanceLimit.sol:BalanceLimit": {
        "src": "@chocolate-factory/contracts/balance-limit/BalanceLimit.sol:8",
        "version": {
          "withMetadata": "62aa9e69cd21dc0a602153b37de0d0dd720541df08b3e2f49794ec60e0dad23d",
          "withoutMetadata": "cc45db747ea7b008f7ef3e6113f1ee304ca928275cf690d0c49b0f318732e425",
          "linkedWithoutMetadata": "cc45db747ea7b008f7ef3e6113f1ee304ca928275cf690d0c49b0f318732e425"
        },
        "inherit": [
          "@chocolate-factory/contracts/admin-manager/AdminManager.sol:AdminManager"
        ],
        "libraries": [
          "@chocolate-factory/contracts/balance-limit/BalanceLimitStorage.sol:BalanceLimitStorage"
        ],
        "methods": [
          "currentBalance(uint8,address)",
          "remainingBalance(uint8,address)",
          "updateBalanceLimit(uint8,uint256)",
          "balanceLimit(uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_admins",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManager",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManager.sol:6"
            },
            {
              "label": "_balanceLimits",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint8,t_struct(Data)337_storage)",
              "contract": "BalanceLimit",
              "src": "@chocolate-factory/contracts/balance-limit/BalanceLimit.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_struct(Data)337_storage)": {
              "label": "mapping(uint8 => struct BalanceLimitStorage.Data)",
              "numberOfBytes": "32"
            },
            "t_struct(Data)337_storage": {
              "label": "struct BalanceLimitStorage.Data",
              "members": [
                {
                  "label": "limit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/balance-limit/BalanceLimitStorage.sol:BalanceLimitStorage": {
        "src": "@chocolate-factory/contracts/balance-limit/BalanceLimitStorage.sol:5",
        "version": {
          "withMetadata": "8c40b2764efc24967cadab6c4778beb3d4aa7908b3496f9decab3e0af1ad45b4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:BalanceLimitUpgradable": {
        "src": "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:9",
        "version": {
          "withMetadata": "12711f48933eee92bffe8f8e592c3a9e304162e9ed34b41fc7eb36b2cead5383",
          "withoutMetadata": "50f180af8594ec1bbb99710472b9f88c21b323965163c4a0ce4a371f44b46243",
          "linkedWithoutMetadata": "50f180af8594ec1bbb99710472b9f88c21b323965163c4a0ce4a371f44b46243"
        },
        "inherit": [
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@chocolate-factory/contracts/balance-limit/BalanceLimitStorage.sol:BalanceLimitStorage"
        ],
        "methods": [
          "currentBalance(uint8,address)",
          "remainingBalance(uint8,address)",
          "updateBalanceLimit(uint8,uint256)",
          "balanceLimit(uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "_balanceLimits",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_uint8,t_struct(Data)337_storage)",
              "contract": "BalanceLimitUpgradable",
              "src": "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_struct(Data)337_storage)": {
              "label": "mapping(uint8 => struct BalanceLimitStorage.Data)",
              "numberOfBytes": "32"
            },
            "t_struct(Data)337_storage": {
              "label": "struct BalanceLimitStorage.Data",
              "members": [
                {
                  "label": "limit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:CustomPaymentSplitterUpgradeable": {
        "src": "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:7",
        "version": {
          "withMetadata": "322c8c07f81dd61bbafdbc304043c0355271152d4b0e2ecdf9f6660d0c3ad240",
          "withoutMetadata": "00191bbb80612cfb6574ff69f93f6484182e5d15c7c1a97b704f7395524845f0",
          "linkedWithoutMetadata": "00191bbb80612cfb6574ff69f93f6484182e5d15c7c1a97b704f7395524845f0"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:PaymentSplitterUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "releaseAll()",
          "releaseAll(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_totalShares",
              "offset": 0,
              "slot": "51",
              "type": "t_uint256",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "label": "_totalReleased",
              "offset": 0,
              "slot": "52",
              "type": "t_uint256",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:36"
            },
            {
              "label": "_shares",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:38"
            },
            {
              "label": "_released",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:39"
            },
            {
              "label": "_payees",
              "offset": 0,
              "slot": "55",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:40"
            },
            {
              "label": "_erc20TotalReleased",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_contract(IERC20Upgradeable)4622,t_uint256)",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:42"
            },
            {
              "label": "_erc20Released",
              "offset": 0,
              "slot": "57",
              "type": "t_mapping(t_contract(IERC20Upgradeable)4622,t_mapping(t_address,t_uint256))",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:43"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "58",
              "type": "t_array(t_uint256)43_storage",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:225"
            },
            {
              "label": "payeesLength",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "CustomPaymentSplitterUpgradeable",
              "src": "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "CustomPaymentSplitterUpgradeable",
              "src": "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)43_storage": {
              "label": "uint256[43]",
              "numberOfBytes": "1376"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)4622": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20Upgradeable)4622,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20Upgradeable => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20Upgradeable)4622,t_uint256)": {
              "label": "mapping(contract IERC20Upgradeable => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/price/PriceUpgradable.sol:PriceUpgradable": {
        "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:9",
        "version": {
          "withMetadata": "a06ad1709cb5382a80fb82eee66608cdb12689868edff037adff23bc391b8bcc",
          "withoutMetadata": "44d2ab31796d2e0ea6a2c5fb09810a0818e6c14deb91db2cb3c8a97a3f4544c5",
          "linkedWithoutMetadata": "44d2ab31796d2e0ea6a2c5fb09810a0818e6c14deb91db2cb3c8a97a3f4544c5"
        },
        "inherit": [
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "setPrice(uint8,uint256)",
          "price(uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "_price",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "PriceUpgradable",
              "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:10"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PriceUpgradable",
              "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/royalties/IERC2981Royalties.sol:IERC2981Royalties": {
        "src": "@chocolate-factory/contracts/royalties/IERC2981Royalties.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:RoyaltiesUpgradable": {
        "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:10",
        "version": {
          "withMetadata": "c8b116bd39cb37dd95db43f69c573109cfab271503c9d73bedb13adc6214a43b",
          "withoutMetadata": "fe88b734c9d80a9aedb69511bfcf1806a4ccd4ab2fd741588fc3a39c55521f1a",
          "linkedWithoutMetadata": "fe88b734c9d80a9aedb69511bfcf1806a4ccd4ab2fd741588fc3a39c55521f1a"
        },
        "inherit": [
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@chocolate-factory/contracts/royalties/IERC2981Royalties.sol:IERC2981Royalties",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "setRoyalties(address,uint256)",
          "royaltyInfo(uint256,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "_royalties",
              "offset": 0,
              "slot": "101",
              "type": "t_struct(RoyaltyInfo)720_storage",
              "contract": "RoyaltiesUpgradable",
              "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "RoyaltiesUpgradable",
              "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)720_storage": {
              "label": "struct RoyaltiesUpgradable.RoyaltyInfo",
              "members": [
                {
                  "label": "recipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:SignerUpgradeable": {
        "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:9",
        "version": {
          "withMetadata": "5f5d874e1fd08aad62abe655539c5dfe6e298f299a1baad735066643b9049a3f",
          "withoutMetadata": "899ae9d44914922dba5e66eb618855c68d0ffd25d82cbc0d63b045a7e2baa68e",
          "linkedWithoutMetadata": "899ae9d44914922dba5e66eb618855c68d0ffd25d82cbc0d63b045a7e2baa68e"
        },
        "inherit": [
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol:IERC5267Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:ECDSAUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_hashedName",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
              "renamedFrom": "_HASHED_NAME"
            },
            {
              "label": "_hashedVersion",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
              "renamedFrom": "_HASHED_VERSION"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
            },
            {
              "label": "_version",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)48_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "SignerUpgradeable",
              "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:12"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)49_storage",
              "contract": "SignerUpgradeable",
              "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/supply/ReservedSupplyUpgradeable.sol:ReservedSupplyUpgradable": {
        "src": "@chocolate-factory/contracts/supply/ReservedSupplyUpgradeable.sol:8",
        "inherit": [
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "setReservedSupply(uint256,uint256)",
          "reservedSupply(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "_reserved",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ReservedSupplyUpgradable",
              "src": "@chocolate-factory/contracts/supply/ReservedSupplyUpgradeable.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReservedSupplyUpgradable",
              "src": "@chocolate-factory/contracts/supply/ReservedSupplyUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:SupplyUpgradable": {
        "src": "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:8",
        "inherit": [
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "setMaxSupply(uint256)",
          "maxSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "_maxSupply",
              "offset": 0,
              "slot": "51",
              "type": "t_uint256",
              "contract": "SupplyUpgradable",
              "src": "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "SupplyUpgradable",
              "src": "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/token/ERC721/presets/Base.sol:Base": {
        "src": "@chocolate-factory/contracts/token/ERC721/presets/Base.sol:19",
        "version": {
          "withMetadata": "d7e62306b80e61f9d01ec260df39a18a98db5ab0c48d7d0d82867be3742f1ff3",
          "withoutMetadata": "bd22d7b245be110e6c49e035c551674d18063e51cf7603fc2fcee7e13fbe46b9",
          "linkedWithoutMetadata": "bd22d7b245be110e6c49e035c551674d18063e51cf7603fc2fcee7e13fbe46b9"
        },
        "inherit": [
          "@chocolate-factory/contracts/token/ERC721/presets/interfaces/IBase.sol:IBase",
          "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:CustomPaymentSplitterUpgradeable",
          "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:PaymentSplitterUpgradeable",
          "operator-filter-registry/src/upgradeable/DefaultOperatorFiltererUpgradeable.sol:DefaultOperatorFiltererUpgradeable",
          "operator-filter-registry/src/upgradeable/OperatorFiltererUpgradeable.sol:OperatorFiltererUpgradeable",
          "@chocolate-factory/contracts/price/PriceUpgradable.sol:PriceUpgradable",
          "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:RoyaltiesUpgradable",
          "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:UriManagerUpgradable",
          "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:BalanceLimitUpgradable",
          "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:WhitelistUpgradable",
          "@chocolate-factory/contracts/admin-mint/AdminMintUpgradable.sol:AdminMintUpgradable",
          "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:SupplyUpgradable",
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@chocolate-factory/contracts/royalties/IERC2981Royalties.sol:IERC2981Royalties",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "erc721a-upgradeable/contracts/extensions/ERC721AQueryableUpgradeable.sol:ERC721AQueryableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "erc721a-upgradeable/contracts/extensions/IERC721AQueryableUpgradeable.sol:IERC721AQueryableUpgradeable",
          "erc721a-upgradeable/contracts/ERC721AUpgradeable.sol:ERC721AUpgradeable",
          "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol:IERC721AUpgradeable",
          "erc721a-upgradeable/contracts/ERC721A__Initializable.sol:ERC721A__Initializable"
        ],
        "libraries": [],
        "methods": [
          "setStage(uint8)",
          "tokenURI(uint256)",
          "supportsInterface(bytes4)",
          "setApprovalForAll(address,bool)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "_maxSupply",
              "offset": 0,
              "slot": "201",
              "type": "t_uint256",
              "contract": "SupplyUpgradable",
              "src": "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "SupplyUpgradable",
              "src": "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "AdminMintUpgradable",
              "src": "@chocolate-factory/contracts/admin-mint/AdminMintUpgradable.sol:29"
            },
            {
              "label": "_whitelists",
              "offset": 0,
              "slot": "301",
              "type": "t_mapping(t_uint8,t_struct(Data)2076_storage)",
              "contract": "WhitelistUpgradable",
              "src": "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:12"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "302",
              "type": "t_array(t_uint256)48_storage",
              "contract": "WhitelistUpgradable",
              "src": "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:67"
            },
            {
              "label": "_balanceLimits",
              "offset": 0,
              "slot": "350",
              "type": "t_mapping(t_uint8,t_struct(Data)337_storage)",
              "contract": "BalanceLimitUpgradable",
              "src": "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:12"
            },
            {
              "label": "_prefix",
              "offset": 0,
              "slot": "351",
              "type": "t_string_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:12"
            },
            {
              "label": "_suffix",
              "offset": 0,
              "slot": "352",
              "type": "t_string_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:13"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "353",
              "type": "t_array(t_uint256)48_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:51"
            },
            {
              "label": "_royalties",
              "offset": 0,
              "slot": "401",
              "type": "t_struct(RoyaltyInfo)720_storage",
              "contract": "RoyaltiesUpgradable",
              "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "402",
              "type": "t_array(t_uint256)49_storage",
              "contract": "RoyaltiesUpgradable",
              "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:77"
            },
            {
              "label": "_price",
              "offset": 0,
              "slot": "451",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "PriceUpgradable",
              "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:10"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "452",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PriceUpgradable",
              "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:35"
            },
            {
              "label": "_totalShares",
              "offset": 0,
              "slot": "501",
              "type": "t_uint256",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "label": "_totalReleased",
              "offset": 0,
              "slot": "502",
              "type": "t_uint256",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:36"
            },
            {
              "label": "_shares",
              "offset": 0,
              "slot": "503",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:38"
            },
            {
              "label": "_released",
              "offset": 0,
              "slot": "504",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:39"
            },
            {
              "label": "_payees",
              "offset": 0,
              "slot": "505",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:40"
            },
            {
              "label": "_erc20TotalReleased",
              "offset": 0,
              "slot": "506",
              "type": "t_mapping(t_contract(IERC20Upgradeable)4622,t_uint256)",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:42"
            },
            {
              "label": "_erc20Released",
              "offset": 0,
              "slot": "507",
              "type": "t_mapping(t_contract(IERC20Upgradeable)4622,t_mapping(t_address,t_uint256))",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:43"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "508",
              "type": "t_array(t_uint256)43_storage",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:225"
            },
            {
              "label": "payeesLength",
              "offset": 0,
              "slot": "551",
              "type": "t_uint256",
              "contract": "CustomPaymentSplitterUpgradeable",
              "src": "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "552",
              "type": "t_array(t_uint256)49_storage",
              "contract": "CustomPaymentSplitterUpgradeable",
              "src": "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:38"
            },
            {
              "label": "stage",
              "offset": 0,
              "slot": "601",
              "type": "t_uint8",
              "contract": "Base",
              "src": "@chocolate-factory/contracts/token/ERC721/presets/Base.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)43_storage": {
              "label": "uint256[43]",
              "numberOfBytes": "1376"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)4622": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20Upgradeable)4622,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20Upgradeable => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20Upgradeable)4622,t_uint256)": {
              "label": "mapping(contract IERC20Upgradeable => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_struct(Data)2076_storage)": {
              "label": "mapping(uint8 => struct WhitelistStorage.Data)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_struct(Data)337_storage)": {
              "label": "mapping(uint8 => struct BalanceLimitStorage.Data)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Data)2076_storage": {
              "label": "struct WhitelistStorage.Data",
              "members": [
                {
                  "label": "merkleTreeRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accounts",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Data)337_storage": {
              "label": "struct BalanceLimitStorage.Data",
              "members": [
                {
                  "label": "limit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)720_storage": {
              "label": "struct RoyaltiesUpgradable.RoyaltyInfo",
              "members": [
                {
                  "label": "recipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/token/ERC721/presets/TwoStage.sol:TwoStage": {
        "src": "@chocolate-factory/contracts/token/ERC721/presets/TwoStage.sol:18",
        "version": {
          "withMetadata": "f19f2ab246c898cefb01d5d4efee912162aad1447722059edf6c21e78569e184",
          "withoutMetadata": "0dcae57d8ea05acb028e80d97604255da42b72d8a00adde23124fc0f23525b2f",
          "linkedWithoutMetadata": "0dcae57d8ea05acb028e80d97604255da42b72d8a00adde23124fc0f23525b2f"
        },
        "inherit": [
          "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:CustomPaymentSplitterUpgradeable",
          "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:PaymentSplitterUpgradeable",
          "operator-filter-registry/src/upgradeable/DefaultOperatorFiltererUpgradeable.sol:DefaultOperatorFiltererUpgradeable",
          "operator-filter-registry/src/upgradeable/OperatorFiltererUpgradeable.sol:OperatorFiltererUpgradeable",
          "@chocolate-factory/contracts/price/PriceUpgradable.sol:PriceUpgradable",
          "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:RoyaltiesUpgradable",
          "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:UriManagerUpgradable",
          "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:BalanceLimitUpgradable",
          "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:WhitelistUpgradable",
          "@chocolate-factory/contracts/admin-mint/AdminMintUpgradable.sol:AdminMintUpgradable",
          "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:SupplyUpgradable",
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@chocolate-factory/contracts/royalties/IERC2981Royalties.sol:IERC2981Royalties",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "erc721a-upgradeable/contracts/extensions/ERC721AQueryableUpgradeable.sol:ERC721AQueryableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "erc721a-upgradeable/contracts/extensions/IERC721AQueryableUpgradeable.sol:IERC721AQueryableUpgradeable",
          "erc721a-upgradeable/contracts/ERC721AUpgradeable.sol:ERC721AUpgradeable",
          "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol:IERC721AUpgradeable",
          "erc721a-upgradeable/contracts/ERC721A__Initializable.sol:ERC721A__Initializable"
        ],
        "libraries": [],
        "methods": [
          "whitelistMint(uint256,bytes32[])",
          "publicMint(uint256)",
          "setStage(uint8)",
          "tokenURI(uint256)",
          "supportsInterface(bytes4)",
          "setApprovalForAll(address,bool)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "_maxSupply",
              "offset": 0,
              "slot": "201",
              "type": "t_uint256",
              "contract": "SupplyUpgradable",
              "src": "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "SupplyUpgradable",
              "src": "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "AdminMintUpgradable",
              "src": "@chocolate-factory/contracts/admin-mint/AdminMintUpgradable.sol:29"
            },
            {
              "label": "_whitelists",
              "offset": 0,
              "slot": "301",
              "type": "t_mapping(t_uint8,t_struct(Data)2076_storage)",
              "contract": "WhitelistUpgradable",
              "src": "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:12"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "302",
              "type": "t_array(t_uint256)48_storage",
              "contract": "WhitelistUpgradable",
              "src": "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:67"
            },
            {
              "label": "_balanceLimits",
              "offset": 0,
              "slot": "350",
              "type": "t_mapping(t_uint8,t_struct(Data)337_storage)",
              "contract": "BalanceLimitUpgradable",
              "src": "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:12"
            },
            {
              "label": "_prefix",
              "offset": 0,
              "slot": "351",
              "type": "t_string_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:12"
            },
            {
              "label": "_suffix",
              "offset": 0,
              "slot": "352",
              "type": "t_string_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:13"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "353",
              "type": "t_array(t_uint256)48_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:51"
            },
            {
              "label": "_royalties",
              "offset": 0,
              "slot": "401",
              "type": "t_struct(RoyaltyInfo)720_storage",
              "contract": "RoyaltiesUpgradable",
              "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "402",
              "type": "t_array(t_uint256)49_storage",
              "contract": "RoyaltiesUpgradable",
              "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:77"
            },
            {
              "label": "_price",
              "offset": 0,
              "slot": "451",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "PriceUpgradable",
              "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:10"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "452",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PriceUpgradable",
              "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:35"
            },
            {
              "label": "_totalShares",
              "offset": 0,
              "slot": "501",
              "type": "t_uint256",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "label": "_totalReleased",
              "offset": 0,
              "slot": "502",
              "type": "t_uint256",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:36"
            },
            {
              "label": "_shares",
              "offset": 0,
              "slot": "503",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:38"
            },
            {
              "label": "_released",
              "offset": 0,
              "slot": "504",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:39"
            },
            {
              "label": "_payees",
              "offset": 0,
              "slot": "505",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:40"
            },
            {
              "label": "_erc20TotalReleased",
              "offset": 0,
              "slot": "506",
              "type": "t_mapping(t_contract(IERC20Upgradeable)4622,t_uint256)",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:42"
            },
            {
              "label": "_erc20Released",
              "offset": 0,
              "slot": "507",
              "type": "t_mapping(t_contract(IERC20Upgradeable)4622,t_mapping(t_address,t_uint256))",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:43"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "508",
              "type": "t_array(t_uint256)43_storage",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:225"
            },
            {
              "label": "payeesLength",
              "offset": 0,
              "slot": "551",
              "type": "t_uint256",
              "contract": "CustomPaymentSplitterUpgradeable",
              "src": "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "552",
              "type": "t_array(t_uint256)49_storage",
              "contract": "CustomPaymentSplitterUpgradeable",
              "src": "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:38"
            },
            {
              "label": "stage",
              "offset": 0,
              "slot": "601",
              "type": "t_enum(Stage)1582",
              "contract": "TwoStage",
              "src": "@chocolate-factory/contracts/token/ERC721/presets/TwoStage.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)43_storage": {
              "label": "uint256[43]",
              "numberOfBytes": "1376"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)4622": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_enum(Stage)1582": {
              "label": "enum TwoStage.Stage",
              "members": [
                "Disabled",
                "Whitelist",
                "Public"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20Upgradeable)4622,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20Upgradeable => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20Upgradeable)4622,t_uint256)": {
              "label": "mapping(contract IERC20Upgradeable => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_struct(Data)2076_storage)": {
              "label": "mapping(uint8 => struct WhitelistStorage.Data)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_struct(Data)337_storage)": {
              "label": "mapping(uint8 => struct BalanceLimitStorage.Data)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Data)2076_storage": {
              "label": "struct WhitelistStorage.Data",
              "members": [
                {
                  "label": "merkleTreeRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accounts",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Data)337_storage": {
              "label": "struct BalanceLimitStorage.Data",
              "members": [
                {
                  "label": "limit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)720_storage": {
              "label": "struct RoyaltiesUpgradable.RoyaltyInfo",
              "members": [
                {
                  "label": "recipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/token/ERC721/presets/interfaces/IBase.sol:IBase": {
        "src": "@chocolate-factory/contracts/token/ERC721/presets/interfaces/IBase.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:UriManagerUpgradable": {
        "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:9",
        "version": {
          "withMetadata": "b8a1fca32b0f65dcb3b832b150e51fdac4784e46a6d5afa1cd0beb396148aa28",
          "withoutMetadata": "a6199aaf62e700cf99b72bec0faadbe77c2bf4b70d334b7ae9f0705a65ae867a",
          "linkedWithoutMetadata": "a6199aaf62e700cf99b72bec0faadbe77c2bf4b70d334b7ae9f0705a65ae867a"
        },
        "inherit": [
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "prefix()",
          "suffix()",
          "setPrefix(string)",
          "setSuffix(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "_prefix",
              "offset": 0,
              "slot": "51",
              "type": "t_string_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:12"
            },
            {
              "label": "_suffix",
              "offset": 0,
              "slot": "52",
              "type": "t_string_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:13"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)48_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/whitelist/WhitelistStorage.sol:WhitelistStorage": {
        "src": "@chocolate-factory/contracts/whitelist/WhitelistStorage.sol:7",
        "version": {
          "withMetadata": "5206b592c2d8741288a445153d879490bd3e87ef04bf0bfe48ee72205fbfdb8d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:WhitelistUpgradable": {
        "src": "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:9",
        "version": {
          "withMetadata": "e22abff8f129d417994fd490d109b4a15436f9d344a73eb32ed09889ec7a08f5",
          "withoutMetadata": "cf175f96c111f9661412d3cef05180b575d59db522da834ad4b180f435e9585d",
          "linkedWithoutMetadata": "cf175f96c111f9661412d3cef05180b575d59db522da834ad4b180f435e9585d"
        },
        "inherit": [
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@chocolate-factory/contracts/whitelist/WhitelistStorage.sol:WhitelistStorage"
        ],
        "methods": [
          "updateMerkleTreeRoot(uint8,bytes32)",
          "merkleTreeRoot(uint8)",
          "addToWhitelist(uint8,address[])",
          "removeFromWhitelist(uint8,address[])",
          "isWhitelisted(uint8,address,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "_whitelists",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_uint8,t_struct(Data)2076_storage)",
              "contract": "WhitelistUpgradable",
              "src": "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:12"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)48_storage",
              "contract": "WhitelistUpgradable",
              "src": "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:67"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_struct(Data)2076_storage)": {
              "label": "mapping(uint8 => struct WhitelistStorage.Data)",
              "numberOfBytes": "32"
            },
            "t_struct(Data)2076_storage": {
              "label": "struct WhitelistStorage.Data",
              "members": [
                {
                  "label": "merkleTreeRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accounts",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:PaymentSplitterUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:29",
        "version": {
          "withMetadata": "725d506b021a291f724e83dae2d17dcbf37bd463149b9cee1084fff5bdc42adc",
          "withoutMetadata": "1aaa5952ed84b678c9bfc908630f7c944f48b0efc10613d281aa2cd7668b35a2",
          "linkedWithoutMetadata": "1aaa5952ed84b678c9bfc908630f7c944f48b0efc10613d281aa2cd7668b35a2"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable"
        ],
        "methods": [
          "()",
          "totalShares()",
          "totalReleased()",
          "totalReleased(address)",
          "shares(address)",
          "released(address)",
          "released(address,address)",
          "payee(uint256)",
          "releasable(address)",
          "releasable(address,address)",
          "release(address payable)",
          "release(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_totalShares",
              "offset": 0,
              "slot": "51",
              "type": "t_uint256",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "label": "_totalReleased",
              "offset": 0,
              "slot": "52",
              "type": "t_uint256",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:36"
            },
            {
              "label": "_shares",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:38"
            },
            {
              "label": "_released",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:39"
            },
            {
              "label": "_payees",
              "offset": 0,
              "slot": "55",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:40"
            },
            {
              "label": "_erc20TotalReleased",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_contract(IERC20Upgradeable)4622,t_uint256)",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:42"
            },
            {
              "label": "_erc20Released",
              "offset": 0,
              "slot": "57",
              "type": "t_mapping(t_contract(IERC20Upgradeable)4622,t_mapping(t_address,t_uint256))",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:43"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "58",
              "type": "t_array(t_uint256)43_storage",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)43_storage": {
              "label": "uint256[43]",
              "numberOfBytes": "1376"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)4622": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20Upgradeable)4622,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20Upgradeable => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20Upgradeable)4622,t_uint256)": {
              "label": "mapping(contract IERC20Upgradeable => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol:IERC5267Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:21",
        "version": {
          "withMetadata": "c2adb61eaae356fe552a836d39ae114f5e66be430af5a573cc7c5e0dcd894f68",
          "withoutMetadata": "52f5fba6fb0bed0f97581f696b77a6aa7a382a7ec20adf954f89c5bd390b00e5",
          "linkedWithoutMetadata": "52f5fba6fb0bed0f97581f696b77a6aa7a382a7ec20adf954f89c5bd390b00e5"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "2b66854d585ec1780f41e1d83b1a20ab87b9e28222f8d26392c32293ca459c20",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "8506a6b339597dc5adf2bf5ac6fb4f18f9025fbf806eb49dea56e91c56317220",
          "withoutMetadata": "a466cd233a87013e71c0795ae93b5fdc7d6cec8df82f26780bbe7a4a4505ab4d",
          "linkedWithoutMetadata": "a466cd233a87013e71c0795ae93b5fdc7d6cec8df82f26780bbe7a4a4505ab4d"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:15",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "152",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)46_storage",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol:12",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "7834828060f66da0039d30efb993f5f2643830d689ce2cdff803e8bbc308450e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:12",
        "version": {
          "withMetadata": "906cb7f0f5843b27e17df40f0dd37e51fd474892ce29df3caa57f7fc546ad01a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol:SignedMathUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:ECDSAUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:14",
        "version": {
          "withMetadata": "d56dabd2b65ded96fca818086b2a2fd86ae5f0bda70fbccc2a0eecc15ed15953",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:35",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol:IERC5267Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:ECDSAUpgradeable"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_hashedName",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
              "renamedFrom": "_HASHED_NAME"
            },
            {
              "label": "_hashedVersion",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
              "renamedFrom": "_HASHED_VERSION"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
            },
            {
              "label": "_version",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)48_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
            }
          ],
          "types": {
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "702cc24e7a5c1d8e4d3a9f406b88de52aca211c426d4604c89a179d27c75ca0d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol:SignedMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol:9",
        "version": {
          "withMetadata": "7f865809d60e93c3efd7b1af4bb15ff776ba9f3c7d1dc7885f79e07cc58f912c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:20",
        "version": {
          "withMetadata": "ae3676318985c40246ff7c8f025789226c5ebf555794e3fd96e8c3a56338df10",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/src/contracts/Cards.sol:Cards": {
        "src": "contracts/src/contracts/Cards.sol:5",
        "version": {
          "withMetadata": "673321814b6e4d7744c5c5b9ea2e130d3e802e2a8cc8a19fce434d66320c4d0b",
          "withoutMetadata": "719a22e5d566ef84d7eb57832abcb5effadfb2984128a2eb2aa5c65e79c13e6c",
          "linkedWithoutMetadata": "719a22e5d566ef84d7eb57832abcb5effadfb2984128a2eb2aa5c65e79c13e6c"
        },
        "inherit": [
          "@chocolate-factory/contracts/token/ERC721/presets/Base.sol:Base",
          "@chocolate-factory/contracts/token/ERC721/presets/interfaces/IBase.sol:IBase",
          "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:CustomPaymentSplitterUpgradeable",
          "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:PaymentSplitterUpgradeable",
          "operator-filter-registry/src/upgradeable/DefaultOperatorFiltererUpgradeable.sol:DefaultOperatorFiltererUpgradeable",
          "operator-filter-registry/src/upgradeable/OperatorFiltererUpgradeable.sol:OperatorFiltererUpgradeable",
          "@chocolate-factory/contracts/price/PriceUpgradable.sol:PriceUpgradable",
          "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:RoyaltiesUpgradable",
          "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:UriManagerUpgradable",
          "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:BalanceLimitUpgradable",
          "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:WhitelistUpgradable",
          "@chocolate-factory/contracts/admin-mint/AdminMintUpgradable.sol:AdminMintUpgradable",
          "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:SupplyUpgradable",
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@chocolate-factory/contracts/royalties/IERC2981Royalties.sol:IERC2981Royalties",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "erc721a-upgradeable/contracts/extensions/ERC721AQueryableUpgradeable.sol:ERC721AQueryableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "erc721a-upgradeable/contracts/extensions/IERC721AQueryableUpgradeable.sol:IERC721AQueryableUpgradeable",
          "erc721a-upgradeable/contracts/ERC721AUpgradeable.sol:ERC721AUpgradeable",
          "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol:IERC721AUpgradeable",
          "erc721a-upgradeable/contracts/ERC721A__Initializable.sol:ERC721A__Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize((address[],uint256[],address,uint96,struct IBase.StageConfig[],(string,string,uint256,string,string)),address)",
          "mint(address,uint256)",
          "setPackets(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "_maxSupply",
              "offset": 0,
              "slot": "201",
              "type": "t_uint256",
              "contract": "SupplyUpgradable",
              "src": "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "SupplyUpgradable",
              "src": "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "AdminMintUpgradable",
              "src": "@chocolate-factory/contracts/admin-mint/AdminMintUpgradable.sol:29"
            },
            {
              "label": "_whitelists",
              "offset": 0,
              "slot": "301",
              "type": "t_mapping(t_uint8,t_struct(Data)2076_storage)",
              "contract": "WhitelistUpgradable",
              "src": "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:12"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "302",
              "type": "t_array(t_uint256)48_storage",
              "contract": "WhitelistUpgradable",
              "src": "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:67"
            },
            {
              "label": "_balanceLimits",
              "offset": 0,
              "slot": "350",
              "type": "t_mapping(t_uint8,t_struct(Data)337_storage)",
              "contract": "BalanceLimitUpgradable",
              "src": "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:12"
            },
            {
              "label": "_prefix",
              "offset": 0,
              "slot": "351",
              "type": "t_string_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:12"
            },
            {
              "label": "_suffix",
              "offset": 0,
              "slot": "352",
              "type": "t_string_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:13"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "353",
              "type": "t_array(t_uint256)48_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:51"
            },
            {
              "label": "_royalties",
              "offset": 0,
              "slot": "401",
              "type": "t_struct(RoyaltyInfo)720_storage",
              "contract": "RoyaltiesUpgradable",
              "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "402",
              "type": "t_array(t_uint256)49_storage",
              "contract": "RoyaltiesUpgradable",
              "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:77"
            },
            {
              "label": "_price",
              "offset": 0,
              "slot": "451",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "PriceUpgradable",
              "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:10"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "452",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PriceUpgradable",
              "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:35"
            },
            {
              "label": "_totalShares",
              "offset": 0,
              "slot": "501",
              "type": "t_uint256",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "label": "_totalReleased",
              "offset": 0,
              "slot": "502",
              "type": "t_uint256",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:36"
            },
            {
              "label": "_shares",
              "offset": 0,
              "slot": "503",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:38"
            },
            {
              "label": "_released",
              "offset": 0,
              "slot": "504",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:39"
            },
            {
              "label": "_payees",
              "offset": 0,
              "slot": "505",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:40"
            },
            {
              "label": "_erc20TotalReleased",
              "offset": 0,
              "slot": "506",
              "type": "t_mapping(t_contract(IERC20Upgradeable)4622,t_uint256)",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:42"
            },
            {
              "label": "_erc20Released",
              "offset": 0,
              "slot": "507",
              "type": "t_mapping(t_contract(IERC20Upgradeable)4622,t_mapping(t_address,t_uint256))",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:43"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "508",
              "type": "t_array(t_uint256)43_storage",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:225"
            },
            {
              "label": "payeesLength",
              "offset": 0,
              "slot": "551",
              "type": "t_uint256",
              "contract": "CustomPaymentSplitterUpgradeable",
              "src": "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "552",
              "type": "t_array(t_uint256)49_storage",
              "contract": "CustomPaymentSplitterUpgradeable",
              "src": "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:38"
            },
            {
              "label": "stage",
              "offset": 0,
              "slot": "601",
              "type": "t_uint8",
              "contract": "Base",
              "src": "@chocolate-factory/contracts/token/ERC721/presets/Base.sol:34"
            },
            {
              "label": "packets",
              "offset": 1,
              "slot": "601",
              "type": "t_address",
              "contract": "Cards",
              "src": "contracts/src/contracts/Cards.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)43_storage": {
              "label": "uint256[43]",
              "numberOfBytes": "1376"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)4622": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20Upgradeable)4622,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20Upgradeable => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20Upgradeable)4622,t_uint256)": {
              "label": "mapping(contract IERC20Upgradeable => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_struct(Data)2076_storage)": {
              "label": "mapping(uint8 => struct WhitelistStorage.Data)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_struct(Data)337_storage)": {
              "label": "mapping(uint8 => struct BalanceLimitStorage.Data)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Data)2076_storage": {
              "label": "struct WhitelistStorage.Data",
              "members": [
                {
                  "label": "merkleTreeRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accounts",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Data)337_storage": {
              "label": "struct BalanceLimitStorage.Data",
              "members": [
                {
                  "label": "limit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)720_storage": {
              "label": "struct RoyaltiesUpgradable.RoyaltyInfo",
              "members": [
                {
                  "label": "recipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/src/contracts/GBaby.sol:Gbaby": {
        "src": "contracts/src/contracts/GBaby.sol:6",
        "version": {
          "withMetadata": "4f28bdb60cf0dfba207046e4f6bb88b3f2c1245cba87ffe852ee1d58f8e5e3f1",
          "withoutMetadata": "ce5fa6876b36f6c520f25867d341b56cce2b7499fec4cc7990d88d598914675b",
          "linkedWithoutMetadata": "ce5fa6876b36f6c520f25867d341b56cce2b7499fec4cc7990d88d598914675b"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "mint(address,uint256)",
          "mintSpecific(address,uint256[])",
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "152",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)46_storage",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/src/contracts/Packets.sol:Packets": {
        "src": "contracts/src/contracts/Packets.sol:20",
        "version": {
          "withMetadata": "70b6981f8301ea568a56532d38d993187560c3987d15b53a95724774ba3a0d6d",
          "withoutMetadata": "d5002293637781639a7fa5d30b69fdde2c662672c6a7d4e0ad27121c8035f6e2",
          "linkedWithoutMetadata": "d5002293637781639a7fa5d30b69fdde2c662672c6a7d4e0ad27121c8035f6e2"
        },
        "inherit": [
          "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:SignerUpgradeable",
          "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:BalanceLimitUpgradable",
          "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:RoyaltiesUpgradable",
          "operator-filter-registry/src/upgradeable/DefaultOperatorFiltererUpgradeable.sol:DefaultOperatorFiltererUpgradeable",
          "operator-filter-registry/src/upgradeable/OperatorFiltererUpgradeable.sol:OperatorFiltererUpgradeable",
          "@chocolate-factory/contracts/price/PriceUpgradable.sol:PriceUpgradable",
          "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:UriManagerUpgradable",
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol:IERC5267Upgradeable",
          "@chocolate-factory/contracts/royalties/IERC2981Royalties.sol:IERC2981Royalties",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256,string,string,address)",
          "setContracts(address,address,address)",
          "setActiveIndex(uint256)",
          "burnMint(uint256[],uint256[])",
          "presaleMint((uint256,address),struct Packets.MintRequest[],bytes)",
          "publicMint(struct Packets.MintRequest[])",
          "setDiscountPrice(uint256)",
          "adminMint(address[],uint256[],uint256)",
          "setSigner(address)",
          "uri(uint256)",
          "withdraw(uint256)",
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "supportsInterface(bytes4)",
          "open(uint256[],uint256[])",
          "getTotal(uint256[])",
          "minted(address)",
          "totalSupply(uint256)",
          "setRandomizer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_hashedName",
              "offset": 0,
              "slot": "201",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
              "renamedFrom": "_HASHED_NAME"
            },
            {
              "label": "_hashedVersion",
              "offset": 0,
              "slot": "202",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
              "renamedFrom": "_HASHED_VERSION"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
            },
            {
              "label": "_version",
              "offset": 0,
              "slot": "204",
              "type": "t_string_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "205",
              "type": "t_array(t_uint256)48_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "253",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "254",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "_prefix",
              "offset": 0,
              "slot": "303",
              "type": "t_string_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:12"
            },
            {
              "label": "_suffix",
              "offset": 0,
              "slot": "304",
              "type": "t_string_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:13"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)48_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:51"
            },
            {
              "label": "_price",
              "offset": 0,
              "slot": "353",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "PriceUpgradable",
              "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:10"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "354",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PriceUpgradable",
              "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:35"
            },
            {
              "label": "_royalties",
              "offset": 0,
              "slot": "403",
              "type": "t_struct(RoyaltyInfo)720_storage",
              "contract": "RoyaltiesUpgradable",
              "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "404",
              "type": "t_array(t_uint256)49_storage",
              "contract": "RoyaltiesUpgradable",
              "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:77"
            },
            {
              "label": "_balanceLimits",
              "offset": 0,
              "slot": "453",
              "type": "t_mapping(t_uint8,t_struct(Data)337_storage)",
              "contract": "BalanceLimitUpgradable",
              "src": "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:12"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "454",
              "type": "t_address",
              "contract": "SignerUpgradeable",
              "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:12"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "455",
              "type": "t_array(t_uint256)49_storage",
              "contract": "SignerUpgradeable",
              "src": "@chocolate-factory/contracts/signer/SignerUpgradeable.sol:37"
            },
            {
              "label": "activeIndex",
              "offset": 0,
              "slot": "504",
              "type": "t_uint256",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:32"
            },
            {
              "label": "idToCards",
              "offset": 0,
              "slot": "505",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:33"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "506",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:34"
            },
            {
              "label": "gbabiesContract",
              "offset": 0,
              "slot": "507",
              "type": "t_contract(IERC721ABurnableUpgradeable)14213",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:125"
            },
            {
              "label": "quillContract",
              "offset": 0,
              "slot": "508",
              "type": "t_contract(IERC721ABurnableUpgradeable)14213",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:126"
            },
            {
              "label": "cardsContract",
              "offset": 0,
              "slot": "509",
              "type": "t_contract(ICards)11557",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:127"
            },
            {
              "label": "_minted",
              "offset": 0,
              "slot": "510",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:139"
            },
            {
              "label": "_isOG",
              "offset": 0,
              "slot": "511",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:140"
            },
            {
              "label": "discountPrice",
              "offset": 0,
              "slot": "512",
              "type": "t_uint256",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:292"
            },
            {
              "label": "randomizer",
              "offset": 0,
              "slot": "513",
              "type": "t_contract(IRandomizer)11569",
              "contract": "Packets",
              "src": "contracts/src/contracts/Packets.sol:431"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ICards)11557": {
              "label": "contract ICards",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721ABurnableUpgradeable)14213": {
              "label": "contract IERC721ABurnableUpgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IRandomizer)11569": {
              "label": "contract IRandomizer",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_struct(Data)337_storage)": {
              "label": "mapping(uint8 => struct BalanceLimitStorage.Data)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Data)337_storage": {
              "label": "struct BalanceLimitStorage.Data",
              "members": [
                {
                  "label": "limit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)720_storage": {
              "label": "struct RoyaltiesUpgradable.RoyaltyInfo",
              "members": [
                {
                  "label": "recipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/src/contracts/QuillAndInk.sol:QuillAndInk": {
        "src": "contracts/src/contracts/QuillAndInk.sol:9",
        "version": {
          "withMetadata": "b4fa7b61a6bf6a8c18b12c4bdf3acf7cc8c3a3d58296df5d25e43afb4437a33b",
          "withoutMetadata": "fa80e98b01352794454cebc21ca7b16c193bebbccb99304762b896d0b7524d18",
          "linkedWithoutMetadata": "fa80e98b01352794454cebc21ca7b16c193bebbccb99304762b896d0b7524d18"
        },
        "inherit": [
          "@chocolate-factory/contracts/token/ERC721/presets/TwoStage.sol:TwoStage",
          "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:CustomPaymentSplitterUpgradeable",
          "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:PaymentSplitterUpgradeable",
          "operator-filter-registry/src/upgradeable/DefaultOperatorFiltererUpgradeable.sol:DefaultOperatorFiltererUpgradeable",
          "operator-filter-registry/src/upgradeable/OperatorFiltererUpgradeable.sol:OperatorFiltererUpgradeable",
          "@chocolate-factory/contracts/price/PriceUpgradable.sol:PriceUpgradable",
          "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:RoyaltiesUpgradable",
          "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:UriManagerUpgradable",
          "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:BalanceLimitUpgradable",
          "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:WhitelistUpgradable",
          "@chocolate-factory/contracts/admin-mint/AdminMintUpgradable.sol:AdminMintUpgradable",
          "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:SupplyUpgradable",
          "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:AdminManagerUpgradable",
          "@chocolate-factory/contracts/royalties/IERC2981Royalties.sol:IERC2981Royalties",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "erc721a-upgradeable/contracts/extensions/ERC721AQueryableUpgradeable.sol:ERC721AQueryableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "erc721a-upgradeable/contracts/extensions/IERC721AQueryableUpgradeable.sol:IERC721AQueryableUpgradeable",
          "erc721a-upgradeable/contracts/ERC721AUpgradeable.sol:ERC721AUpgradeable",
          "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol:IERC721AUpgradeable",
          "erc721a-upgradeable/contracts/ERC721A__Initializable.sol:ERC721A__Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes32,address,uint256,address[],uint256[])",
          "initializeV2()",
          "burn(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_admins",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AdminManagerUpgradable",
              "src": "@chocolate-factory/contracts/admin-manager/AdminManagerUpgradable.sol:33"
            },
            {
              "label": "_maxSupply",
              "offset": 0,
              "slot": "201",
              "type": "t_uint256",
              "contract": "SupplyUpgradable",
              "src": "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "SupplyUpgradable",
              "src": "@chocolate-factory/contracts/supply/SupplyUpgradable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "AdminMintUpgradable",
              "src": "@chocolate-factory/contracts/admin-mint/AdminMintUpgradable.sol:29"
            },
            {
              "label": "_whitelists",
              "offset": 0,
              "slot": "301",
              "type": "t_mapping(t_uint8,t_struct(Data)2076_storage)",
              "contract": "WhitelistUpgradable",
              "src": "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:12"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "302",
              "type": "t_array(t_uint256)48_storage",
              "contract": "WhitelistUpgradable",
              "src": "@chocolate-factory/contracts/whitelist/WhitelistUpgradable.sol:67"
            },
            {
              "label": "_balanceLimits",
              "offset": 0,
              "slot": "350",
              "type": "t_mapping(t_uint8,t_struct(Data)337_storage)",
              "contract": "BalanceLimitUpgradable",
              "src": "@chocolate-factory/contracts/balance-limit/BalanceLimitUpgradable.sol:12"
            },
            {
              "label": "_prefix",
              "offset": 0,
              "slot": "351",
              "type": "t_string_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:12"
            },
            {
              "label": "_suffix",
              "offset": 0,
              "slot": "352",
              "type": "t_string_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:13"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "353",
              "type": "t_array(t_uint256)48_storage",
              "contract": "UriManagerUpgradable",
              "src": "@chocolate-factory/contracts/uri-manager/UriManagerUpgradable.sol:51"
            },
            {
              "label": "_royalties",
              "offset": 0,
              "slot": "401",
              "type": "t_struct(RoyaltyInfo)720_storage",
              "contract": "RoyaltiesUpgradable",
              "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "402",
              "type": "t_array(t_uint256)49_storage",
              "contract": "RoyaltiesUpgradable",
              "src": "@chocolate-factory/contracts/royalties/RoyaltiesUpgradable.sol:77"
            },
            {
              "label": "_price",
              "offset": 0,
              "slot": "451",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "PriceUpgradable",
              "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:10"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "452",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PriceUpgradable",
              "src": "@chocolate-factory/contracts/price/PriceUpgradable.sol:35"
            },
            {
              "label": "_totalShares",
              "offset": 0,
              "slot": "501",
              "type": "t_uint256",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "label": "_totalReleased",
              "offset": 0,
              "slot": "502",
              "type": "t_uint256",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:36"
            },
            {
              "label": "_shares",
              "offset": 0,
              "slot": "503",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:38"
            },
            {
              "label": "_released",
              "offset": 0,
              "slot": "504",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:39"
            },
            {
              "label": "_payees",
              "offset": 0,
              "slot": "505",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:40"
            },
            {
              "label": "_erc20TotalReleased",
              "offset": 0,
              "slot": "506",
              "type": "t_mapping(t_contract(IERC20Upgradeable)4622,t_uint256)",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:42"
            },
            {
              "label": "_erc20Released",
              "offset": 0,
              "slot": "507",
              "type": "t_mapping(t_contract(IERC20Upgradeable)4622,t_mapping(t_address,t_uint256))",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:43"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "508",
              "type": "t_array(t_uint256)43_storage",
              "contract": "PaymentSplitterUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:225"
            },
            {
              "label": "payeesLength",
              "offset": 0,
              "slot": "551",
              "type": "t_uint256",
              "contract": "CustomPaymentSplitterUpgradeable",
              "src": "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "552",
              "type": "t_array(t_uint256)49_storage",
              "contract": "CustomPaymentSplitterUpgradeable",
              "src": "@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable.sol:38"
            },
            {
              "label": "stage",
              "offset": 0,
              "slot": "601",
              "type": "t_enum(Stage)1582",
              "contract": "TwoStage",
              "src": "@chocolate-factory/contracts/token/ERC721/presets/TwoStage.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)43_storage": {
              "label": "uint256[43]",
              "numberOfBytes": "1376"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)4622": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_enum(Stage)1582": {
              "label": "enum TwoStage.Stage",
              "members": [
                "Disabled",
                "Whitelist",
                "Public"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20Upgradeable)4622,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20Upgradeable => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20Upgradeable)4622,t_uint256)": {
              "label": "mapping(contract IERC20Upgradeable => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_struct(Data)2076_storage)": {
              "label": "mapping(uint8 => struct WhitelistStorage.Data)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_struct(Data)337_storage)": {
              "label": "mapping(uint8 => struct BalanceLimitStorage.Data)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Data)2076_storage": {
              "label": "struct WhitelistStorage.Data",
              "members": [
                {
                  "label": "merkleTreeRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accounts",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Data)337_storage": {
              "label": "struct BalanceLimitStorage.Data",
              "members": [
                {
                  "label": "limit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)720_storage": {
              "label": "struct RoyaltiesUpgradable.RoyaltyInfo",
              "members": [
                {
                  "label": "recipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/src/contracts/Randomizer.sol:Randomizer": {
        "src": "contracts/src/contracts/Randomizer.sol:7",
        "version": {
          "withMetadata": "f9ec6b377d418a412ab7c6f49d56ce7f0417fa9a45697f2e05c303d6a523b53f",
          "withoutMetadata": "4ee99cac85ba4117fcd324e5d6ab9630a324bbbd4b5ac09e4184191629cd93cf",
          "linkedWithoutMetadata": "4ee99cac85ba4117fcd324e5d6ab9630a324bbbd4b5ac09e4184191629cd93cf"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "random(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "seed",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "Randomizer",
              "src": "contracts/src/contracts/Randomizer.sol:8"
            },
            {
              "label": "caller",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "Randomizer",
              "src": "contracts/src/contracts/Randomizer.sol:9"
            },
            {
              "label": "singleSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Randomizer",
              "src": "contracts/src/contracts/Randomizer.sol:11"
            },
            {
              "label": "boostSupply",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "Randomizer",
              "src": "contracts/src/contracts/Randomizer.sol:12"
            },
            {
              "label": "jumboSupply",
              "offset": 0,
              "slot": "105",
              "type": "t_uint256",
              "contract": "Randomizer",
              "src": "contracts/src/contracts/Randomizer.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/src/contracts/interfaces/ICards.sol:ICards": {
        "src": "contracts/src/contracts/interfaces/ICards.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/src/contracts/interfaces/IRandomizer.sol:IRandomizer": {
        "src": "contracts/src/contracts/interfaces/IRandomizer.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "random(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "erc721a-upgradeable/contracts/ERC721AStorage.sol:ERC721AStorage": {
        "src": "erc721a-upgradeable/contracts/ERC721AStorage.sol:5",
        "version": {
          "withMetadata": "83cc096fcb3c5e980909b826e12843c4658b0dfdf52b55dd8ddddb7a60934856",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "erc721a-upgradeable/contracts/ERC721AUpgradeable.sol:ERC721AUpgradeable": {
        "src": "erc721a-upgradeable/contracts/ERC721AUpgradeable.sol:38",
        "version": {
          "withMetadata": "c459c7d0625b5530fe6cdf33ae632106dfd5e61cdf32e6a4da95302010b2777f",
          "withoutMetadata": "975d2c917f124914dcaa28b7181bfbe7d4632f0873823cd53c8f7ef5ee723f57",
          "linkedWithoutMetadata": "975d2c917f124914dcaa28b7181bfbe7d4632f0873823cd53c8f7ef5ee723f57"
        },
        "inherit": [
          "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol:IERC721AUpgradeable",
          "erc721a-upgradeable/contracts/ERC721A__Initializable.sol:ERC721A__Initializable"
        ],
        "libraries": [
          "erc721a-upgradeable/contracts/ERC721AStorage.sol:ERC721AStorage"
        ],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "erc721a-upgradeable/contracts/ERC721AUpgradeable.sol:ERC721A__IERC721ReceiverUpgradeable": {
        "src": "erc721a-upgradeable/contracts/ERC721AUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "erc721a-upgradeable/contracts/ERC721A__Initializable.sol:ERC721A__Initializable": {
        "src": "erc721a-upgradeable/contracts/ERC721A__Initializable.sol:19",
        "inherit": [],
        "libraries": [
          "erc721a-upgradeable/contracts/ERC721A__InitializableStorage.sol:ERC721A__InitializableStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "erc721a-upgradeable/contracts/ERC721A__InitializableStorage.sol:ERC721A__InitializableStorage": {
        "src": "erc721a-upgradeable/contracts/ERC721A__InitializableStorage.sol:9",
        "version": {
          "withMetadata": "69565b6ded9308ccc324caa35a62ff26e7440af2d9f34c09edda0c37ee17b2c1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol:IERC721AUpgradeable": {
        "src": "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "erc721a-upgradeable/contracts/extensions/ERC721ABurnableUpgradeable.sol:ERC721ABurnableUpgradeable": {
        "src": "erc721a-upgradeable/contracts/extensions/ERC721ABurnableUpgradeable.sol:16",
        "inherit": [
          "erc721a-upgradeable/contracts/extensions/IERC721ABurnableUpgradeable.sol:IERC721ABurnableUpgradeable",
          "erc721a-upgradeable/contracts/ERC721AUpgradeable.sol:ERC721AUpgradeable",
          "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol:IERC721AUpgradeable",
          "erc721a-upgradeable/contracts/ERC721A__Initializable.sol:ERC721A__Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "erc721a-upgradeable/contracts/extensions/ERC721AQueryableUpgradeable.sol:ERC721AQueryableUpgradeable": {
        "src": "erc721a-upgradeable/contracts/extensions/ERC721AQueryableUpgradeable.sol:16",
        "inherit": [
          "erc721a-upgradeable/contracts/extensions/IERC721AQueryableUpgradeable.sol:IERC721AQueryableUpgradeable",
          "erc721a-upgradeable/contracts/ERC721AUpgradeable.sol:ERC721AUpgradeable",
          "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol:IERC721AUpgradeable",
          "erc721a-upgradeable/contracts/ERC721A__Initializable.sol:ERC721A__Initializable"
        ],
        "libraries": [],
        "methods": [
          "explicitOwnershipOf(uint256)",
          "explicitOwnershipsOf(uint256[])",
          "tokensOfOwnerIn(address,uint256,uint256)",
          "tokensOfOwner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "erc721a-upgradeable/contracts/extensions/IERC721ABurnableUpgradeable.sol:IERC721ABurnableUpgradeable": {
        "src": "erc721a-upgradeable/contracts/extensions/IERC721ABurnableUpgradeable.sol:12",
        "inherit": [
          "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol:IERC721AUpgradeable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "erc721a-upgradeable/contracts/extensions/IERC721AQueryableUpgradeable.sol:IERC721AQueryableUpgradeable": {
        "src": "erc721a-upgradeable/contracts/extensions/IERC721AQueryableUpgradeable.sol:12",
        "inherit": [
          "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol:IERC721AUpgradeable"
        ],
        "libraries": [],
        "methods": [
          "explicitOwnershipOf(uint256)",
          "explicitOwnershipsOf(uint256[])",
          "tokensOfOwnerIn(address,uint256,uint256)",
          "tokensOfOwner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "operator-filter-registry/src/IOperatorFilterRegistry.sol:IOperatorFilterRegistry": {
        "src": "operator-filter-registry/src/IOperatorFilterRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isOperatorAllowed(address,address)",
          "register(address)",
          "registerAndSubscribe(address,address)",
          "registerAndCopyEntries(address,address)",
          "unregister(address)",
          "updateOperator(address,address,bool)",
          "updateOperators(address,address[],bool)",
          "updateCodeHash(address,bytes32,bool)",
          "updateCodeHashes(address,bytes32[],bool)",
          "subscribe(address,address)",
          "unsubscribe(address,bool)",
          "subscriptionOf(address)",
          "subscribers(address)",
          "subscriberAt(address,uint256)",
          "copyEntriesOf(address,address)",
          "isOperatorFiltered(address,address)",
          "isCodeHashOfFiltered(address,address)",
          "isCodeHashFiltered(address,bytes32)",
          "filteredOperators(address)",
          "filteredCodeHashes(address)",
          "filteredOperatorAt(address,uint256)",
          "filteredCodeHashAt(address,uint256)",
          "isRegistered(address)",
          "codeHashOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "operator-filter-registry/src/upgradeable/DefaultOperatorFiltererUpgradeable.sol:DefaultOperatorFiltererUpgradeable": {
        "src": "operator-filter-registry/src/upgradeable/DefaultOperatorFiltererUpgradeable.sol:12",
        "inherit": [
          "operator-filter-registry/src/upgradeable/OperatorFiltererUpgradeable.sol:OperatorFiltererUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "operator-filter-registry/src/upgradeable/OperatorFiltererUpgradeable.sol:OperatorFiltererUpgradeable": {
        "src": "operator-filter-registry/src/upgradeable/OperatorFiltererUpgradeable.sol:15",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      }
    }
  ]
}