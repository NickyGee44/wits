/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CustomPaymentSplitterUpgradeable,
  CustomPaymentSplitterUpgradeableInterface,
} from "../../../../@chocolate-factory/contracts/payments/CustomPaymentSplitterUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20PaymentReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "PayeeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "payee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payeesLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "releasable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "releasable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "releaseAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d05806100206000396000f3fe6080604052600436106100e15760003560e01c80639852595c1161007f578063ce7c2ac211610059578063ce7c2ac214610298578063d79779b2146102ce578063e33b7de314610304578063e919ecad1461031957600080fd5b80639852595c14610222578063a3f8eace14610258578063c45ac0501461027857600080fd5b806348b75044116100bb57806348b7504414610195578063580fc80a146101b55780635be7fde8146101d55780638b83209b146101ea57600080fd5b8063191655871461012f5780633a98ef3914610151578063406072a91461017557600080fd5b3661012a577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77033604080516001600160a01b0390921682523460208301520160405180910390a1005b600080fd5b34801561013b57600080fd5b5061014f61014a366004610a96565b61032f565b005b34801561015d57600080fd5b506033545b6040519081526020015b60405180910390f35b34801561018157600080fd5b50610162610190366004610ab3565b61041f565b3480156101a157600080fd5b5061014f6101b0366004610ab3565b61044c565b3480156101c157600080fd5b5061014f6101d0366004610a96565b61055d565b3480156101e157600080fd5b5061014f61058e565b3480156101f657600080fd5b5061020a610205366004610aec565b6105bd565b6040516001600160a01b03909116815260200161016c565b34801561022e57600080fd5b5061016261023d366004610a96565b6001600160a01b031660009081526036602052604090205490565b34801561026457600080fd5b50610162610273366004610a96565b6105ed565b34801561028457600080fd5b50610162610293366004610ab3565b610635565b3480156102a457600080fd5b506101626102b3366004610a96565b6001600160a01b031660009081526035602052604090205490565b3480156102da57600080fd5b506101626102e9366004610a96565b6001600160a01b031660009081526038602052604090205490565b34801561031057600080fd5b50603454610162565b34801561032557600080fd5b5061016260655481565b6001600160a01b03811660009081526035602052604090205461036d5760405162461bcd60e51b815260040161036490610b05565b60405180910390fd5b6000610378826105ed565b90508060000361039a5760405162461bcd60e51b815260040161036490610b4b565b80603460008282546103ac9190610bac565b90915550506001600160a01b03821660009081526036602052604090208054820190556103d982826106db565b604080516001600160a01b0384168152602081018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056910160405180910390a15050565b6001600160a01b038083166000908152603960209081526040808320938516835292905220545b92915050565b6001600160a01b0381166000908152603560205260409020546104815760405162461bcd60e51b815260040161036490610b05565b600061048d8383610635565b9050806000036104af5760405162461bcd60e51b815260040161036490610b4b565b6001600160a01b038316600090815260386020526040812080548392906104d7908490610bac565b90915550506001600160a01b0380841660009081526039602090815260408083209386168352929052208054820190556105128383836107f9565b604080516001600160a01b038481168252602082018490528516917f3be5b7a71e84ed12875d241991c70855ac5817d847039e17a9d895c1ceb0f18a910160405180910390a2505050565b60005b60655481101561058a576000610575826105bd565b9050610581838261044c565b50600101610560565b5050565b60005b6065548110156105ba5760006105a6826105bd565b90506105b18161032f565b50600101610591565b50565b6000603782815481106105d2576105d2610bbf565b6000918252602090912001546001600160a01b031692915050565b6000806105f960345490565b6106039047610bac565b905061062e8382610629866001600160a01b031660009081526036602052604090205490565b61084b565b9392505050565b6001600160a01b03821660009081526038602052604081205481906040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa158015610694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b89190610bd5565b6106c29190610bac565b90506106d38382610629878761041f565b949350505050565b8047101561072b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610364565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610778576040519150601f19603f3d011682016040523d82523d6000602084013e61077d565b606091505b50509050806107f45760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610364565b505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526107f4908490610889565b6033546001600160a01b038416600090815260356020526040812054909183916108759086610bee565b61087f9190610c05565b6106d39190610c27565b60006108de826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661095e9092919063ffffffff16565b90508051600014806108ff5750808060200190518101906108ff9190610c3a565b6107f45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610364565b60606106d3848460008585600080866001600160a01b031685876040516109859190610c80565b60006040518083038185875af1925050503d80600081146109c2576040519150601f19603f3d011682016040523d82523d6000602084013e6109c7565b606091505b50915091506109d8878383876109e3565b979650505050505050565b60608315610a52578251600003610a4b576001600160a01b0385163b610a4b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610364565b50816106d3565b6106d38383815115610a675781518083602001fd5b8060405162461bcd60e51b81526004016103649190610c9c565b6001600160a01b03811681146105ba57600080fd5b600060208284031215610aa857600080fd5b813561062e81610a81565b60008060408385031215610ac657600080fd5b8235610ad181610a81565b91506020830135610ae181610a81565b809150509250929050565b600060208284031215610afe57600080fd5b5035919050565b60208082526026908201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060408201526573686172657360d01b606082015260800190565b6020808252602b908201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060408201526a191d59481c185e5b595b9d60aa1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561044657610446610b96565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610be757600080fd5b5051919050565b808202811582820484141761044657610446610b96565b600082610c2257634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561044657610446610b96565b600060208284031215610c4c57600080fd5b8151801515811461062e57600080fd5b60005b83811015610c77578181015183820152602001610c5f565b50506000910152565b60008251610c92818460208701610c5c565b9190910192915050565b6020815260008251806020840152610cbb816040850160208701610c5c565b601f01601f1916919091016040019291505056fea2646970667358221220c17efe2171bf0f6ca1f598246ffccab4eddbad74454db49202fb698fbd69883164736f6c63430008110033";

type CustomPaymentSplitterUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CustomPaymentSplitterUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CustomPaymentSplitterUpgradeable__factory extends ContractFactory {
  constructor(...args: CustomPaymentSplitterUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CustomPaymentSplitterUpgradeable> {
    return super.deploy(
      overrides || {}
    ) as Promise<CustomPaymentSplitterUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CustomPaymentSplitterUpgradeable {
    return super.attach(address) as CustomPaymentSplitterUpgradeable;
  }
  override connect(signer: Signer): CustomPaymentSplitterUpgradeable__factory {
    return super.connect(signer) as CustomPaymentSplitterUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CustomPaymentSplitterUpgradeableInterface {
    return new utils.Interface(
      _abi
    ) as CustomPaymentSplitterUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CustomPaymentSplitterUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CustomPaymentSplitterUpgradeable;
  }
}
