/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ReservedSupplyUpgradable,
  ReservedSupplyUpgradableInterface,
} from "../../../../../../contracts/src/contracts/chocolate-factory/ReservedSupplyUpgradeable.sol/ReservedSupplyUpgradable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id_",
        type: "uint256",
      },
    ],
    name: "reservedSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enable_",
        type: "bool",
      },
    ],
    name: "setAdminPermissions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserved_",
        type: "uint256",
      },
    ],
    name: "setReservedSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ReservedSupplyUpgradable__factory {
  static readonly abi = _abi;
  static createInterface(): ReservedSupplyUpgradableInterface {
    return new utils.Interface(_abi) as ReservedSupplyUpgradableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReservedSupplyUpgradable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ReservedSupplyUpgradable;
  }
}
