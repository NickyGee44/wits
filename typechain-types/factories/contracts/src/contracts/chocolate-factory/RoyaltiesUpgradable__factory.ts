/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  RoyaltiesUpgradable,
  RoyaltiesUpgradableInterface,
} from "../../../../../contracts/src/contracts/chocolate-factory/RoyaltiesUpgradable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RoyaltiesSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value_",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enable_",
        type: "bool",
      },
    ],
    name: "setAdminPermissions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "setRoyalties",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId_",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506104ab806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c578063240ff27f1461008457806324d7806c146100995780632a55205a146100c55780638c7ea24b146100f7575b600080fd5b61006f61006a36600461033e565b61010a565b60405190151581526020015b60405180910390f35b61009761009236600461038b565b610141565b005b61006f6100a73660046103c7565b6001600160a01b031660009081526033602052604090205460ff1690565b6100d86100d33660046103e2565b6101bf565b604080516001600160a01b03909316835260208301919091520161007b565b610097610105366004610404565b610214565b60006001600160e01b0319821663152a902d60e11b148061013b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b3360009081526033602052604090205460ff166101945760405162461bcd60e51b815260206004820152600c60248201526b2737ba1030b71030b236b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b03919091166000908152603360205260409020805460ff1916911515919091179055565b604080518082019091526065546001600160a01b038116808352600160a01b90910462ffffff1660208301819052909160009161271090610200908661042e565b61020a9190610453565b9150509250929050565b3360009081526033602052604090205460ff166102625760405162461bcd60e51b815260206004820152600c60248201526b2737ba1030b71030b236b4b760a11b604482015260640161018b565b61026c8282610270565b5050565b6127108111156102c25760405162461bcd60e51b815260206004820152601c60248201527f526f79616c746965733a2076616c756520697320746f6f206869676800000000604482015260640161018b565b6040805180820182526001600160a01b03841680825262ffffff84166020928301819052606580546001600160b81b0319168317600160a01b90920291909117905582519081529081018390527f908669f35f6fb3977a956ba70597841fe541d1e8491ca3c025161e258d3bfdb6910160405180910390a15050565b60006020828403121561035057600080fd5b81356001600160e01b03198116811461036857600080fd5b9392505050565b80356001600160a01b038116811461038657600080fd5b919050565b6000806040838503121561039e57600080fd5b6103a78361036f565b9150602083013580151581146103bc57600080fd5b809150509250929050565b6000602082840312156103d957600080fd5b6103688261036f565b600080604083850312156103f557600080fd5b50508035926020909101359150565b6000806040838503121561041757600080fd5b6104208361036f565b946020939093013593505050565b808202811582820484141761013b57634e487b7160e01b600052601160045260246000fd5b60008261047057634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f7cb82c2f2a1af98c0113225ec891b461c269842325c692f8d70ddd82b4412fe64736f6c63430008110033";

type RoyaltiesUpgradableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoyaltiesUpgradableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyaltiesUpgradable__factory extends ContractFactory {
  constructor(...args: RoyaltiesUpgradableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RoyaltiesUpgradable> {
    return super.deploy(overrides || {}) as Promise<RoyaltiesUpgradable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RoyaltiesUpgradable {
    return super.attach(address) as RoyaltiesUpgradable;
  }
  override connect(signer: Signer): RoyaltiesUpgradable__factory {
    return super.connect(signer) as RoyaltiesUpgradable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltiesUpgradableInterface {
    return new utils.Interface(_abi) as RoyaltiesUpgradableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoyaltiesUpgradable {
    return new Contract(address, _abi, signerOrProvider) as RoyaltiesUpgradable;
  }
}
