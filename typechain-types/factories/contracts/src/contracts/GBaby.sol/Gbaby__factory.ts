/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  Gbaby,
  GbabyInterface,
} from "../../../../../contracts/src/contracts/GBaby.sol/Gbaby";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintSpecific",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d2a806100206000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80634f6ccce7116100ad578063a22cb46511610071578063a22cb46514610268578063b88d4fde1461027b578063c87b56dd1461028e578063e985e9c5146102a1578063fd6990fa146102dd57600080fd5b80634f6ccce71461021f5780636352211e1461023257806370a08231146102455780638129fc1c1461025857806395d89b411461026057600080fd5b806323b872dd116100f457806323b872dd146101c05780632f745c59146101d357806340c10f19146101e657806342842e0e146101f957806342966c681461020c57600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b31461019957806318160ddd146101ae575b600080fd5b61014461013f366004611656565b6102f0565b60405190151581526020015b60405180910390f35b61016161031b565b60405161015091906116c3565b61018161017c3660046116d6565b6103ad565b6040516001600160a01b039091168152602001610150565b6101ac6101a736600461170b565b6103d4565b005b6099545b604051908152602001610150565b6101ac6101ce366004611735565b6104ee565b6101b26101e136600461170b565b610520565b6101ac6101f436600461170b565b6105b6565b6101ac610207366004611735565b6105f0565b6101ac61021a3660046116d6565b61060b565b6101b261022d3660046116d6565b61063c565b6101816102403660046116d6565b6106cf565b6101b2610253366004611771565b61072f565b6101ac6107b5565b6101616108ff565b6101ac61027636600461178c565b61090e565b6101ac6102893660046117de565b61091d565b61016161029c3660046116d6565b610955565b6101446102af3660046118ba565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6101ac6102eb3660046118ed565b6109c9565b60006001600160e01b0319821663780e9d6360e01b1480610315575061031582610a08565b92915050565b60606065805461032a90611973565b80601f016020809104026020016040519081016040528092919081815260200182805461035690611973565b80156103a35780601f10610378576101008083540402835291602001916103a3565b820191906000526020600020905b81548152906001019060200180831161038657829003601f168201915b5050505050905090565b60006103b882610a58565b506000908152606960205260409020546001600160a01b031690565b60006103df826106cf565b9050806001600160a01b0316836001600160a01b0316036104515760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061046d575061046d81336102af565b6104df5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610448565b6104e98383610ab7565b505050565b6104f9335b82610b25565b6105155760405162461bcd60e51b8152600401610448906119ad565b6104e9838383610ba4565b600061052b8361072f565b821061058d5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610448565b506001600160a01b03919091166000908152609760209081526040808320938352929052205490565b60005b818110156104e9576105de836105ce60995490565b6105d9906001611a10565b610d15565b806105e881611a23565b9150506105b9565b6104e98383836040518060200160405280600081525061091d565b610614336104f3565b6106305760405162461bcd60e51b8152600401610448906119ad565b61063981610d2f565b50565b600061064760995490565b82106106aa5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610448565b609982815481106106bd576106bd611a3c565b90600052602060002001549050919050565b6000818152606760205260408120546001600160a01b0316806103155760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610448565b60006001600160a01b0382166107995760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610448565b506001600160a01b031660009081526068602052604090205490565b600054610100900460ff16158080156107d55750600054600160ff909116105b806107ef5750303b1580156107ef575060005460ff166001145b6108525760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610448565b6000805460ff191660011790558015610875576000805461ff0019166101001790555b6108b7604051806040016040528060048152602001631d195cdd60e21b815250604051806040016040528060048152602001631d195cdd60e21b815250610dd2565b8015610639576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b60606066805461032a90611973565b610919338383610e03565b5050565b6109273383610b25565b6109435760405162461bcd60e51b8152600401610448906119ad565b61094f84848484610ed1565b50505050565b606061096082610a58565b600061097760408051602081019091526000815290565b9050600081511161099757604051806020016040528060008152506109c2565b806109a184610f04565b6040516020016109b2929190611a52565b6040516020818303038152906040525b9392505050565b60005b8181101561094f576109f6848484848181106109ea576109ea611a3c565b90506020020135610d15565b80610a0081611a23565b9150506109cc565b60006001600160e01b031982166380ac58cd60e01b1480610a3957506001600160e01b03198216635b5e139f60e01b145b8061031557506301ffc9a760e01b6001600160e01b0319831614610315565b6000818152606760205260409020546001600160a01b03166106395760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610448565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610aec826106cf565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b31836106cf565b9050806001600160a01b0316846001600160a01b03161480610b7857506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b80610b9c5750836001600160a01b0316610b91846103ad565b6001600160a01b0316145b949350505050565b826001600160a01b0316610bb7826106cf565b6001600160a01b031614610bdd5760405162461bcd60e51b815260040161044890611a81565b6001600160a01b038216610c3f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610448565b610c4c8383836001610f97565b826001600160a01b0316610c5f826106cf565b6001600160a01b031614610c855760405162461bcd60e51b815260040161044890611a81565b600081815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260688552838620805460001901905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6109198282604051806020016040528060008152506110cb565b6000610d3a826106cf565b9050610d4a816000846001610f97565b610d53826106cf565b600083815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526068845282852080546000190190558785526067909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600054610100900460ff16610df95760405162461bcd60e51b815260040161044890611ac6565b61091982826110fe565b816001600160a01b0316836001600160a01b031603610e645760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610448565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610edc848484610ba4565b610ee88484848461113e565b61094f5760405162461bcd60e51b815260040161044890611b11565b60606000610f118361123f565b600101905060008167ffffffffffffffff811115610f3157610f316117c8565b6040519080825280601f01601f191660200182016040528015610f5b576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610f6557509392505050565b60018111156110065760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b6064820152608401610448565b816001600160a01b0385166110625761105d81609980546000838152609a60205260408120829055600182018355919091527f72a152ddfb8e864297c917af52ea6c1c68aead0fee1a62673fcc7e0c94979d000155565b611085565b836001600160a01b0316856001600160a01b031614611085576110858582611317565b6001600160a01b0384166110a15761109c816113b4565b6110c4565b846001600160a01b0316846001600160a01b0316146110c4576110c48482611463565b5050505050565b6110d583836114a7565b6110e2600084848461113e565b6104e95760405162461bcd60e51b815260040161044890611b11565b600054610100900460ff166111255760405162461bcd60e51b815260040161044890611ac6565b60656111318382611bb1565b5060666104e98282611bb1565b60006001600160a01b0384163b1561123457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611182903390899088908890600401611c71565b6020604051808303816000875af19250505080156111bd575060408051601f3d908101601f191682019092526111ba91810190611cae565b60015b61121a573d8080156111eb576040519150601f19603f3d011682016040523d82523d6000602084013e6111f0565b606091505b5080516000036112125760405162461bcd60e51b815260040161044890611b11565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b9c565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061127e5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106112aa576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106112c857662386f26fc10000830492506010015b6305f5e10083106112e0576305f5e100830492506008015b61271083106112f457612710830492506004015b60648310611306576064830492506002015b600a83106103155760010192915050565b600060016113248461072f565b61132e9190611ccb565b600083815260986020526040902054909150808214611381576001600160a01b03841660009081526097602090815260408083208584528252808320548484528184208190558352609890915290208190555b5060009182526098602090815260408084208490556001600160a01b039094168352609781528383209183525290812055565b6099546000906113c690600190611ccb565b6000838152609a6020526040812054609980549394509092849081106113ee576113ee611a3c565b90600052602060002001549050806099838154811061140f5761140f611a3c565b6000918252602080832090910192909255828152609a9091526040808220849055858252812055609980548061144757611447611cde565b6001900381819060005260206000200160009055905550505050565b600061146e8361072f565b6001600160a01b039093166000908152609760209081526040808320868452825280832085905593825260989052919091209190915550565b6001600160a01b0382166114fd5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610448565b6000818152606760205260409020546001600160a01b0316156115625760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610448565b611570600083836001610f97565b6000818152606760205260409020546001600160a01b0316156115d55760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610448565b6001600160a01b038216600081815260686020908152604080832080546001019055848352606790915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461063957600080fd5b60006020828403121561166857600080fd5b81356109c281611640565b60005b8381101561168e578181015183820152602001611676565b50506000910152565b600081518084526116af816020860160208601611673565b601f01601f19169290920160200192915050565b6020815260006109c26020830184611697565b6000602082840312156116e857600080fd5b5035919050565b80356001600160a01b038116811461170657600080fd5b919050565b6000806040838503121561171e57600080fd5b611727836116ef565b946020939093013593505050565b60008060006060848603121561174a57600080fd5b611753846116ef565b9250611761602085016116ef565b9150604084013590509250925092565b60006020828403121561178357600080fd5b6109c2826116ef565b6000806040838503121561179f57600080fd5b6117a8836116ef565b9150602083013580151581146117bd57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156117f457600080fd5b6117fd856116ef565b935061180b602086016116ef565b925060408501359150606085013567ffffffffffffffff8082111561182f57600080fd5b818701915087601f83011261184357600080fd5b813581811115611855576118556117c8565b604051601f8201601f19908116603f0116810190838211818310171561187d5761187d6117c8565b816040528281528a602084870101111561189657600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156118cd57600080fd5b6118d6836116ef565b91506118e4602084016116ef565b90509250929050565b60008060006040848603121561190257600080fd5b61190b846116ef565b9250602084013567ffffffffffffffff8082111561192857600080fd5b818601915086601f83011261193c57600080fd5b81358181111561194b57600080fd5b8760208260051b850101111561196057600080fd5b6020830194508093505050509250925092565b600181811c9082168061198757607f821691505b6020821081036119a757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610315576103156119fa565b600060018201611a3557611a356119fa565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60008351611a64818460208801611673565b835190830190611a78818360208801611673565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b601f8211156104e957600081815260208120601f850160051c81016020861015611b8a5750805b601f850160051c820191505b81811015611ba957828155600101611b96565b505050505050565b815167ffffffffffffffff811115611bcb57611bcb6117c8565b611bdf81611bd98454611973565b84611b63565b602080601f831160018114611c145760008415611bfc5750858301515b600019600386901b1c1916600185901b178555611ba9565b600085815260208120601f198616915b82811015611c4357888601518255948401946001909101908401611c24565b5085821015611c615787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611ca490830184611697565b9695505050505050565b600060208284031215611cc057600080fd5b81516109c281611640565b81810381811115610315576103156119fa565b634e487b7160e01b600052603160045260246000fdfea26469706673582212208fbc3ad9d9b34dfa73529b5006cb3210938ec70455ac54e406ae87ee2f3c3fdd64736f6c63430008110033";

type GbabyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GbabyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Gbaby__factory extends ContractFactory {
  constructor(...args: GbabyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Gbaby> {
    return super.deploy(overrides || {}) as Promise<Gbaby>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Gbaby {
    return super.attach(address) as Gbaby;
  }
  override connect(signer: Signer): Gbaby__factory {
    return super.connect(signer) as Gbaby__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GbabyInterface {
    return new utils.Interface(_abi) as GbabyInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Gbaby {
    return new Contract(address, _abi, signerOrProvider) as Gbaby;
  }
}
